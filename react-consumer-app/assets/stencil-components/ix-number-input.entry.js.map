{"version":3,"file":"ix-number-input.entry.js","sources":["node_modules/@siemens/ix/dist/collection/components/input/number-input.css?tag=ix-number-input&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/input/number-input.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2025 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ninput {\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  font-family: Siemens Sans, Siemens Sans, Arial, Helvetica, sans-serif;\n  font-style: normal;\n  font-size: var(--theme-ms-0);\n  line-height: var(--theme-line-height-md);\n  font-weight: var(--theme-font-weight-normal);\n  letter-spacing: var(--theme-letter-spacing-xl);\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smooting: grayscale;\n  min-height: 2rem;\n  width: auto;\n  padding: 0.25rem 0.5rem;\n  background-color: var(--theme-input--background);\n  color: var(--theme-input--color);\n  -webkit-appearance: textfield;\n     -moz-appearance: textfield;\n          appearance: textfield;\n  text-overflow: ellipsis;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color);\n  border-radius: var(--theme-input--border-radius);\n  box-shadow: var(--theme-input--box-shadow);\n}\ninput[type=number] {\n  text-align: right;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  margin-right: -2px;\n  margin-left: 2px;\n  display: none;\n}\ninput:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ninput:-webkit-autofill, input:autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ninput::-moz-placeholder {\n  color: var(--theme-input-hint--color);\n}\ninput::placeholder {\n  color: var(--theme-input-hint--color);\n}\ninput.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), input:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ninput.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), input:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ninput.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), input:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ninput.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), input:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ninput:-moz-read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ninput.read-only, input:read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ninput.read-only::-moz-placeholder, input:read-only::-moz-placeholder {\n  color: transparent;\n}\ninput:-moz-read-only::placeholder {\n  color: transparent;\n}\ninput.read-only::placeholder, input:read-only::placeholder {\n  color: transparent;\n}\ninput:disabled, input.disabled {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  color: var(--theme-input--color--disabled);\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--disabled);\n}\ninput:disabled::-moz-placeholder, input.disabled::-moz-placeholder {\n  color: transparent;\n}\ninput:disabled::placeholder, input.disabled::placeholder {\n  color: transparent;\n}\n\ntextarea {\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  font-family: Siemens Sans, Siemens Sans, Arial, Helvetica, sans-serif;\n  font-style: normal;\n  font-size: var(--theme-ms-0);\n  line-height: var(--theme-line-height-md);\n  font-weight: var(--theme-font-weight-normal);\n  letter-spacing: var(--theme-letter-spacing-xl);\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smooting: grayscale;\n  min-height: 2rem;\n  width: auto;\n  padding: 0.25rem 0.5rem;\n  background-color: var(--theme-input--background);\n  color: var(--theme-input--color);\n  -webkit-appearance: textfield;\n     -moz-appearance: textfield;\n          appearance: textfield;\n  text-overflow: ellipsis;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color);\n  border-radius: var(--theme-input--border-radius);\n  box-shadow: var(--theme-input--box-shadow);\n}\ntextarea[type=number] {\n  text-align: right;\n}\ntextarea[type=number]::-webkit-inner-spin-button {\n  margin-right: -2px;\n  margin-left: 2px;\n  display: none;\n}\ntextarea:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ntextarea:-webkit-autofill, textarea:autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ntextarea::-moz-placeholder {\n  color: var(--theme-input-hint--color);\n}\ntextarea::placeholder {\n  color: var(--theme-input-hint--color);\n}\ntextarea.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), textarea:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ntextarea.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), textarea:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ntextarea.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), textarea:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ntextarea.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), textarea:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ntextarea:-moz-read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ntextarea.read-only, textarea:read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ntextarea.read-only::-moz-placeholder, textarea:read-only::-moz-placeholder {\n  color: transparent;\n}\ntextarea:-moz-read-only::placeholder {\n  color: transparent;\n}\ntextarea.read-only::placeholder, textarea:read-only::placeholder {\n  color: transparent;\n}\ntextarea:disabled, textarea.disabled {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  color: var(--theme-input--color--disabled);\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--disabled);\n}\ntextarea:disabled::-moz-placeholder, textarea.disabled::-moz-placeholder {\n  color: transparent;\n}\ntextarea:disabled::placeholder, textarea.disabled::placeholder {\n  color: transparent;\n}\ntextarea {\n  min-height: 2rem;\n  height: 3.25rem;\n  padding: calc(0.375rem - var(--theme-input--border-thickness)) calc(0.5rem - var(--theme-input--border-thickness));\n}\n\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]),\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]) {\n  border-color: var(--theme-input--border-color--info);\n}\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]):hover,\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--info--hover) !important;\n}\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]):active,\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--info--active) !important;\n}\n\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]),\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]) {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]):hover,\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]):active,\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]),\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]) {\n  background-color: var(--theme-input--background--invalid);\n  border-color: var(--theme-input--border-color--invalid) !important;\n}\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):hover,\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--invalid--hover) !important;\n}\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):active,\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--invalid--active) !important;\n}\n\n:host {\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n  display: inline-block;\n  position: relative;\n  width: auto;\n}\n:host *,\n:host *::after,\n:host *::before {\n  box-sizing: border-box;\n}\n:host ::-webkit-scrollbar-button {\n  display: none;\n}\n@-moz-document url-prefix() {\n  :host * {\n    scrollbar-color: var(--theme-scrollbar-thumb--background) var(--theme-scrollbar-track--background);\n    scrollbar-width: thin;\n  }\n}\n:host ::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n:host ::-webkit-scrollbar-track {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-track--background);\n}\n:host ::-webkit-scrollbar-track:hover {\n  background: var(--theme-scrollbar-track--background--hover);\n}\n:host ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-thumb--background);\n}\n:host ::-webkit-scrollbar-thumb:hover {\n  background: var(--theme-scrollbar-thumb--background--hover);\n}\n:host ::-webkit-scrollbar-corner {\n  display: none;\n}\n:host .input-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n:host input {\n  width: 100%;\n  height: 100%;\n}\n:host .start-container,\n:host .end-container {\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n}\n:host .start-container {\n  left: 0;\n}\n:host .end-container {\n  right: 0;\n}\n:host .start-container ::slotted(*) {\n  margin-left: 0.5rem;\n}\n:host .start-container ::slotted(ix-icon.size-24),\n:host .start-container ::slotted(ix-icon-button.btn-icon-16) {\n  margin-left: 0.25rem;\n}\n:host .start-container ::slotted(ix-icon-button.btn-icon-32) {\n  margin-left: 0;\n}\n:host .end-container ::slotted(*) {\n  margin-right: 0.5rem;\n}\n:host .end-container ::slotted(ix-icon.size-24),\n:host .end-container ::slotted(ix-icon-button.btn-icon-16) {\n  margin-right: 0.25rem;\n}\n:host .end-container ::slotted(ix-icon-button.btn-icon-32) {\n  margin-right: 0;\n}\n:host .bottom-text {\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n:host(.disabled) input,\n:host(.disabled) textarea {\n  pointer-events: none;\n}\n\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input {\n  border-color: var(--theme-input--border-color--info);\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--info--hover) !important;\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--info--active) !important;\n}\n\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input {\n  background-color: var(--theme-input--background--invalid);\n  border-color: var(--theme-input--border-color--invalid) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input:hover,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--invalid--hover) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input:active,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--invalid--active) !important;\n}\n\n:host .input-wrapper.show-stepper-buttons input[type=number] {\n  min-width: 6rem;\n}\n:host .number-stepper-container {\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-right: 0.25rem;\n}\n:host .number-stepper-container.container-hidden {\n  display: none;\n}","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { iconMinus, iconPlus } from \"@siemens/ix-icons/icons\";\nimport { h, Host, } from \"@stencil/core\";\nimport { HookValidationLifecycle, } from \"../utils/input\";\nimport { makeRef } from \"../utils/make-ref\";\nimport { InputElement, SlotEnd, SlotStart } from \"./input.fc\";\nimport { addDisposableChangesAndVisibilityObservers, adjustPaddingForStartAndEnd, checkAllowedKeys, checkInternalValidity, mapValidationResult, onInputBlur, } from \"./input.util\";\nlet numberInputIds = 0;\n/**\n * @form-ready\n * @slot start - Element will be displayed at the start of the input\n * @slot end - Element will be displayed at the end of the input\n */\nexport class NumberInput {\n    constructor() {\n        /**\n         * The value of the input field\n         */\n        this.value = 0;\n        /**\n         * Indicates if the field is required\n         */\n        this.required = false;\n        /**\n         * Disables the input field\n         */\n        this.disabled = false;\n        /**\n         * Indicates if the field is read-only\n         */\n        this.readonly = false;\n        this.isInvalid = false;\n        this.isValid = false;\n        this.isInfo = false;\n        this.isWarning = false;\n        this.isInvalidByRequired = false;\n        this.inputRef = makeRef();\n        this.slotEndRef = makeRef();\n        this.slotStartRef = makeRef();\n        this.numberInputId = `number-input-${numberInputIds++}`;\n        this.touched = false;\n    }\n    updateClassMappings(result) {\n        mapValidationResult(this, result);\n    }\n    componentWillLoad() {\n        this.updateFormInternalValue(this.value);\n    }\n    connectedCallback() {\n        this.disposableChangesAndVisibilityObservers =\n            addDisposableChangesAndVisibilityObservers(this.hostElement, this.updatePaddings.bind(this));\n    }\n    disconnectedCallback() {\n        var _a;\n        (_a = this.disposableChangesAndVisibilityObservers) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    updatePaddings() {\n        adjustPaddingForStartAndEnd(this.slotStartRef.current, this.slotEndRef.current, this.inputRef.current);\n    }\n    updateFormInternalValue(value) {\n        this.formInternals.setFormValue(value.toString());\n        this.value = value;\n    }\n    /** @internal */\n    async getAssociatedFormElement() {\n        return this.formInternals.form;\n    }\n    /** @internal */\n    async hasValidValue() {\n        const nativeInput = await this.getNativeInputElement();\n        if (nativeInput.value === '') {\n            return Promise.resolve(false);\n        }\n        return Promise.resolve(this.value !== null && this.value !== undefined && !isNaN(this.value));\n    }\n    /**\n     * Returns the native input element used under the hood\n     */\n    getNativeInputElement() {\n        return this.inputRef.waitForCurrent();\n    }\n    /**\n     * Focuses the input field\n     */\n    async focusInput() {\n        return (await this.getNativeInputElement()).focus();\n    }\n    /**\n     * Returns true if the input field has been touched\n     * @internal\n     */\n    isTouched() {\n        return Promise.resolve(this.touched);\n    }\n    render() {\n        const showStepperButtons = this.showStepperButtons && (this.disabled || this.readonly) === false;\n        return (h(Host, { key: 'ef8acf686290210f136f6915caaf93519742a5c6', class: {\n                disabled: this.disabled,\n                readonly: this.readonly,\n            } }, h(\"ix-field-wrapper\", { key: 'fb332a250f3b89cd9ba913ce0d73ae769e1f7d11', id: this.numberInputId, required: this.required, label: this.label, helperText: this.helperText, invalidText: this.invalidText, infoText: this.infoText, warningText: this.warningText, validText: this.validText, showTextAsTooltip: this.showTextAsTooltip, isInvalid: this.isInvalid, isValid: this.isValid, isInfo: this.isInfo, isWarning: this.isWarning, controlRef: this.inputRef }, h(\"div\", { key: 'f75e95a23010f6227413ef8f3e845f881526feb2', class: {\n                'input-wrapper': true,\n                'show-stepper-buttons': !!this.showStepperButtons,\n            } }, h(SlotStart, { key: '35361c9e391c2b2fcf47115ede6f7e66cfff7e3a', slotStartRef: this.slotStartRef, onSlotChange: () => this.updatePaddings() }), h(InputElement, { key: '2c9255c6d904488f2969723bada4d5ce4164b44f', id: this.numberInputId, readonly: this.readonly, disabled: this.disabled, step: this.step, min: this.min, max: this.max, pattern: this.pattern, type: 'number', isInvalid: this.isInvalid, required: this.required, value: this.value, placeholder: this.placeholder, inputRef: this.inputRef, onKeyPress: (event) => checkAllowedKeys(this, event), valueChange: (value) => this.valueChange.emit(Number(value)), updateFormInternalValue: (value) => this.updateFormInternalValue(Number(value)), onBlur: () => {\n                onInputBlur(this, this.inputRef.current);\n                this.touched = true;\n            } }), h(SlotEnd, { key: '5574b0ab18e81036f16c89c4b1bd84f1ae636385', slotEndRef: this.slotEndRef, onSlotChange: () => this.updatePaddings() }, h(\"div\", { key: '8e78f12da4ea4130333542bf49f238b02a7d808e', class: {\n                'number-stepper-container': true,\n                'container-hidden': !showStepperButtons,\n            } }, h(\"ix-icon-button\", { key: 'd44b7b3032860d9590bc22ef582fc4b8406a7ac0', ghost: true, icon: iconMinus, size: \"16\", class: \"number-stepper-button step-minus\", \"aria-label\": \"decrement number\", onClick: () => {\n                if (!this.inputRef.current) {\n                    return;\n                }\n                this.inputRef.current.stepDown();\n                checkInternalValidity(this, this.inputRef.current);\n                this.updateFormInternalValue(Number(this.inputRef.current.value));\n                this.valueChange.emit(this.value);\n            } }), h(\"ix-icon-button\", { key: 'f862e0c47f85486018eace274092f8eab9ff029d', ghost: true, icon: iconPlus, size: \"16\", class: \"number-stepper-button step-plus\", \"aria-label\": \"increment number\", onClick: () => {\n                if (!this.inputRef.current) {\n                    return;\n                }\n                this.inputRef.current.stepUp();\n                checkInternalValidity(this, this.inputRef.current);\n                this.updateFormInternalValue(Number(this.inputRef.current.value));\n                this.valueChange.emit(this.value);\n            } })))))));\n    }\n    static get is() { return \"ix-number-input\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get formAssociated() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"number-input.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"number-input.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"name\": {\n                \"type\": \"string\",\n                \"attribute\": \"name\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"name of the input element\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"attribute\": \"placeholder\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"placeholder of the input element\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"value\": {\n                \"type\": \"number\",\n                \"attribute\": \"value\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"required\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Indicates if the field is required\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Disables the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"readonly\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"readonly\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Indicates if the field is read-only\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"helperText\": {\n                \"type\": \"string\",\n                \"attribute\": \"helper-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The helper text for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"infoText\": {\n                \"type\": \"string\",\n                \"attribute\": \"info-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The info text for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"showTextAsTooltip\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"show-text-as-tooltip\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Indicates if the text should be shown as a tooltip\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"validText\": {\n                \"type\": \"string\",\n                \"attribute\": \"valid-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The valid text for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"warningText\": {\n                \"type\": \"string\",\n                \"attribute\": \"warning-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The warning text for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"attribute\": \"label\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The label for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"invalidText\": {\n                \"type\": \"string\",\n                \"attribute\": \"invalid-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The error text for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"pattern\": {\n                \"type\": \"string\",\n                \"attribute\": \"pattern\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The pattern for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"min\": {\n                \"type\": \"any\",\n                \"attribute\": \"min\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | number\",\n                    \"resolved\": \"number | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The minimum value for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"max\": {\n                \"type\": \"any\",\n                \"attribute\": \"max\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | number\",\n                    \"resolved\": \"number | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The maximum value for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"allowedCharactersPattern\": {\n                \"type\": \"string\",\n                \"attribute\": \"allowed-characters-pattern\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The allowed characters pattern for the input field\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"showStepperButtons\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"show-stepper-buttons\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Indicates if the stepper buttons should be shown\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"step\": {\n                \"type\": \"any\",\n                \"attribute\": \"step\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | number\",\n                    \"resolved\": \"number | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"since\",\n                            \"text\": \"3.0.0\"\n                        }],\n                    \"text\": \"Step value to increment or decrement the input value\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isInvalid\": {},\n            \"isValid\": {},\n            \"isInfo\": {},\n            \"isWarning\": {},\n            \"isInvalidByRequired\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"valueChange\",\n                \"name\": \"valueChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the value of the input field changes\"\n                },\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"validityStateChange\",\n                \"name\": \"validityStateChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the validity state of the input field changes\"\n                },\n                \"complexType\": {\n                    \"original\": \"ValidityState\",\n                    \"resolved\": \"ValidityState\",\n                    \"references\": {\n                        \"ValidityState\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::ValidityState\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ixBlur\",\n                \"name\": \"ixBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the input field loses focus\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getAssociatedFormElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLFormElement | null>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLFormElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLFormElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLFormElement | null>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"hasValidValue\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getNativeInputElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLInputElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLInputElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLInputElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLInputElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns the native input element used under the hood\",\n                    \"tags\": []\n                }\n            },\n            \"focusInput\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Focuses the input field\",\n                    \"tags\": []\n                }\n            },\n            \"isTouched\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns true if the input field has been touched\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"hostElement\"; }\n    static get attachInternalsMemberName() { return \"formInternals\"; }\n}\n__decorate([\n    HookValidationLifecycle()\n], NumberInput.prototype, \"updateClassMappings\", null);\n//# sourceMappingURL=number-input.js.map\n"],"names":["this"],"mappings":";;;;;;;;;;AAAA,MAAM,cAAc,GAAG,8+bAA8+b;;ACQrgc,IAAI,UAAU,GAAG,CAACA,SAAI,IAAIA,SAAI,CAAC,UAAU,KAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAA;AACjF,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC;IAC5H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;AACrE,QAAA,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;;AAEnD,QAAA,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAC3C,YAAA,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AACjB,gBAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC;AAChF,IAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;AACjE,CAAC;AAOD,IAAI,cAAc,GAAG,CAAC;MAMT,WAAW,GAAA,MAAA;AACpB,IAAA,WAAA,CAAA,OAAA,EAAA;;;;;;;;;;;;AAII,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AAId,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AAIrB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AAIrB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;AACtB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK;AACpB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;AACtB,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE;AAC3B,QAAA,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE;AAC7B,QAAA,IAAI,CAAC,aAAa,GAAG,gBAAgB,cAAc,EAAE,EAAE;AACvD,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK;AACvB;AACD,IAAA,mBAAmB,CAAC,MAAM,EAAA;AACtB,QAAA,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC;;IAErC,iBAAiB,GAAA;AACb,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC;;IAE5C,iBAAiB,GAAA;AACb,QAAA,IAAI,CAAC,uCAAuC;AACxC,YAAA,0CAA0C,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEpG,oBAAoB,GAAA;AAChB,QAAA,IAAI,EAAE;QACN,CAAC,EAAE,GAAG,IAAI,CAAC,uCAAuC,MAAM,IAAI,IAAI,EAAE,KAAK,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;;IAE1G,cAAc,GAAA;AACV,QAAA,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;;AAE1G,IAAA,uBAAuB,CAAC,KAAK,EAAA;QACzB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AACjD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK;;AAGtB,IAAA,MAAM,wBAAwB,GAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI;;AAGlC,IAAA,MAAM,aAAa,GAAA;AACf,QAAA,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE;AACtD,QAAA,IAAI,WAAW,CAAC,KAAK,KAAK,EAAE,EAAE;AAC1B,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;;QAEjC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAKjG,qBAAqB,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;;AAKzC,IAAA,MAAM,UAAU,GAAA;QACZ,OAAO,CAAC,MAAM,IAAI,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE;;IAMvD,SAAS,GAAA;QACL,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;IAExC,MAAM,GAAA;AACF,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,MAAM,KAAK;QAChG,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE;gBAClE,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,EAAE,EAAE,CAAC,CAAC,kBAAkB,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE;AAC1gB,gBAAA,eAAe,EAAE,IAAI;AACrB,gBAAA,sBAAsB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB;AACpD,aAAA,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC,KAAK,KAAK,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,WAAW,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,uBAAuB,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,MAAK;gBACpsB,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACxC,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI;AACvB,aAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE;AAC7M,gBAAA,0BAA0B,EAAE,IAAI;gBAChC,kBAAkB,EAAE,CAAC,kBAAkB;AAC1C,aAAA,EAAE,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,kCAAkC,EAAE,YAAY,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAK;AAC7M,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACxB;;AAEJ,gBAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAChC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAClD,gBAAA,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACjE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACrC,aAAC,EAAE,CAAC,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,iCAAiC,EAAE,YAAY,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAK;AAC5M,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACxB;;AAEJ,gBAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC9B,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAClD,gBAAA,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACjE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACpC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAIjB,IAAA,WAAW,cAAc,GAAA,EAAK,OAAO,IAAI,CAAC;;;AA0iB9C,UAAU,CAAC;AACP,IAAA,uBAAuB;CAC1B,EAAE,WAAW,CAAC,SAAS,EAAE,qBAAqB,EAAE,IAAI,CAAC;;;;;","x_google_ignoreList":[0,1]}