{"version":3,"file":"d3-bar-chart.js","sourceRoot":"","sources":["../../../../../src/components/Charts-Component/d3-bar-chart/d3-bar-chart.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, Element, Watch, State } from '@stencil/core';\r\nimport * as d3 from 'd3';\r\n\r\ninterface ChartData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  tag: 'd3-bar-chart',\r\n  styleUrl: 'd3-bar-chart.css',\r\n  shadow: true,\r\n})\r\nexport class D3BarChart {\r\n  @Element() hostElement!: HTMLElement;\r\n\r\n  @Prop() chartData: ChartData[] = [];\r\n  @Prop() width: number = 0;\r\n  @Prop() height: number = 0;\r\n\r\n  @State() private currentWidth: number = 0;\r\n  @State() private currentHeight: number = 0;\r\n\r\n  private svg!: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n  private chartContainer!: HTMLDivElement;\r\n\r\n  @Watch('chartData')\r\n  onDataChange() {\r\n    this.drawChart();\r\n  }\r\n\r\n\r\n  componentDidLoad() {\r\n\r\n    this.svg = d3.select(this.hostElement.shadowRoot!.querySelector('svg')!) as unknown as d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n    this.chartContainer = this.hostElement.shadowRoot!.querySelector('.chart-container')! as HTMLDivElement;\r\n    this.updateDimensions();\r\n    this.drawChart();\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    this.updateDimensions();\r\n    this.drawChart();\r\n  }\r\n\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n\r\n  private handleResize = () => {\r\n    this.updateDimensions();\r\n    this.drawChart();\r\n  };\r\n\r\n\r\n  private updateDimensions = () => {\r\n    if (this.width > 0 && this.height > 0) {\r\n      this.currentWidth = this.width;\r\n      this.currentHeight = this.height;\r\n    } else if (this.chartContainer) {\r\n      this.currentWidth = this.chartContainer.clientWidth || 400;\r\n      this.currentHeight = 400;\r\n    } else {\r\n      this.currentWidth = 400;\r\n      this.currentHeight = 400;\r\n    }\r\n  };\r\n\r\n\r\n  private drawChart = () => {\r\n    if (!this.svg || !this.chartData || this.chartData.length === 0 || this.currentWidth === 0 || this.currentHeight === 0) {\r\n      if (this.svg) this.svg.selectAll('*').remove();\r\n      return;\r\n    }\r\n\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 40 };\r\n    const innerWidth = this.currentWidth - margin.left - margin.right;\r\n    const innerHeight = this.currentHeight - margin.top - margin.bottom;\r\n\r\n    this.svg.selectAll('*').remove();\r\n\r\n    this.svg\r\n      .attr('width', this.currentWidth)\r\n      .attr('height', this.currentHeight);\r\n\r\n    const g = this.svg.append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const xScale = d3.scaleBand<string>()\r\n      .domain(this.chartData.map(d => d.name))\r\n      .range([0, innerWidth])\r\n      .padding(0.1);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(this.chartData, d => d.value) || 0])\r\n      .range([innerHeight, 0]);\r\n\r\n    g.append('g')\r\n      .attr('class', 'x-axis')\r\n      .attr('transform', `translate(0,${innerHeight})`)\r\n      .call(d3.axisBottom(xScale))\r\n      .selectAll('text')\r\n      .attr('class', 'text-sm fill-gray-700');\r\n\r\n    g.append('g')\r\n      .attr('class', 'y-axis')\r\n      .call(d3.axisLeft(yScale))\r\n      .selectAll('text')\r\n      .attr('class', 'text-sm fill-gray-700');\r\n\r\n    g.selectAll('.bar')\r\n      .data(this.chartData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar fill-blue-500 hover:fill-blue-600 transition-colors duration-200')\r\n      .attr('x', d => xScale(d.name)!)\r\n      .attr('y', d => yScale(d.value))\r\n      .attr('width', xScale.bandwidth())\r\n      .attr('height', d => innerHeight - yScale(d.value));\r\n\r\n    g.selectAll('.bar-label')\r\n      .data(this.chartData)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'bar-label text-xs fill-white font-semibold pointer-events-none')\r\n      .attr('x', d => xScale(d.name)! + xScale.bandwidth() / 2)\r\n      .attr('y', d => yScale(d.value) + 15)\r\n      .attr('text-anchor', 'middle')\r\n      .text(d => d.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chart-container\">\r\n        <svg></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}