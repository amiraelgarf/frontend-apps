{"file":"ix-filter-chip.ix-select-item.entry.js","mappings":"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","names":[],"sources":["node_modules/@siemens/ix/dist/collection/components/filter-chip/filter-chip.css?tag=ix-filter-chip&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/filter-chip/filter-chip.js","node_modules/@siemens/ix/dist/collection/components/select-item/events.js","node_modules/@siemens/ix/dist/collection/components/select-item/select-item.css?tag=ix-select-item&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/select-item/select-item.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* Dimensions */\n/* Font sizes */\n/* Line heights */\n/* Animation timings */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 1.5rem;\n  padding-left: 0.5rem;\n  border: var(--theme-focus--border-thickness) solid var(--theme-chip-primary-outline--border-color);\n  border-radius: 2rem;\n  background-color: var(--theme-color-ghost);\n  color: var(--theme-chip-primary-outline--color);\n}\n:host *,\n:host *::after,\n:host *::before {\n  box-sizing: border-box;\n}\n:host ::-webkit-scrollbar-button {\n  display: none;\n}\n@-moz-document url-prefix() {\n  :host * {\n    scrollbar-color: var(--theme-scrollbar-thumb--background) var(--theme-scrollbar-track--background);\n    scrollbar-width: thin;\n  }\n}\n:host ::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n:host ::-webkit-scrollbar-track {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-track--background);\n}\n:host ::-webkit-scrollbar-track:hover {\n  background: var(--theme-scrollbar-track--background--hover);\n}\n:host ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-thumb--background);\n}\n:host ::-webkit-scrollbar-thumb:hover {\n  background: var(--theme-scrollbar-thumb--background--hover);\n}\n:host ::-webkit-scrollbar-corner {\n  display: none;\n}\n:host .slot-container {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n:host .slot-container :host-context(.disabled) {\n  background-color: var(--theme-color-ghost);\n  border-color: var(--theme-color-component-4);\n  color: var(--theme-color-weak-text);\n}\n:host ix-icon-button {\n  height: 1.5rem;\n  margin-left: 0.25rem;\n}\n:host ix-icon-button:not(.disabled):not(:disabled):focus-visible {\n  outline: none;\n}\n\n:host(.disabled) {\n  border: var(--theme-focus--border-thickness) solid var(--theme-color-component-4);\n  color: var(--theme-color-weak-text);\n  padding-right: 0.5rem;\n  cursor: default;\n}\n\n:host(.readonly) {\n  padding-right: 0.5rem;\n}\n\n:host(:not(.disabled):not(:disabled)) {\n  cursor: pointer;\n}\n\n:host(:hover:not(.disabled):not(:disabled)) {\n  background-color: var(--theme-color-ghost-primary--hover);\n  border-color: var(--theme-chip-primary-outline--border-color--hover);\n  color: var(--theme-chip-primary-outline--color--hover);\n}\n\n:host(:not(.disabled):not(:disabled)) {\n  cursor: pointer;\n}\n\n:host(:active:not(.disabled):not(:disabled)) {\n  background-color: var(--theme-color-ghost-primary--active);\n  border-color: var(--theme-chip-primary-outline--border-color--active);\n  color: var(--theme-chip-primary-outline--color--active);\n}\n\n:host(:focus-visible:not(.disabled):not(:disabled)) {\n  outline: var(--theme-color-focus-bdr) solid var(--theme-focus--border-thickness);\n  outline-offset: -0.125rem;\n}","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { iconCloseSmall } from \"@siemens/ix-icons/icons\";\nimport { h, Host, } from \"@stencil/core\";\nexport class FilterChip {\n    constructor() {\n        /**\n         * If true the filter chip will be in disabled state\n         */\n        this.disabled = false;\n        /**\n         * If true the filter chip will be in readonly mode\n         */\n        this.readonly = false;\n    }\n    onCloseClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.closeClick.emit();\n    }\n    render() {\n        return (h(Host, { key: 'e3b72ae1a230407eb5a5b4b29b0c35bae916ca44', class: { disabled: this.disabled, readonly: this.readonly }, title: this.hostElement.textContent }, h(\"div\", { key: '8eb078b239b54e9e72dc14e02ea60c93fa531c7c', class: \"slot-container\" }, h(\"slot\", { key: 'ce47a7f795bf7d09bdbe42113c1a994068545940' })), !this.disabled && !this.readonly ? (h(\"ix-icon-button\", { ghost: true, oval: true, icon: iconCloseSmall, size: \"16\", tabindex: this.disabled ? -1 : 0, variant: \"primary\", disabled: this.disabled, onClick: (e) => this.onCloseClick(e) })) : null));\n    }\n    static get is() { return \"ix-filter-chip\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"filter-chip.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"filter-chip.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true the filter chip will be in disabled state\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"readonly\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"readonly\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true the filter chip will be in readonly mode\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"closeClick\",\n                \"name\": \"closeClick\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Close clicked\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"hostElement\"; }\n}\n//# sourceMappingURL=filter-chip.js.map\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport class IxSelectItemLabelChangeEvent extends CustomEvent {\n    constructor(detail) {\n        super('ix-select-item:labelChange', {\n            bubbles: true,\n            detail,\n        });\n    }\n}\nexport class IxSelectItemValueChangeEvent extends CustomEvent {\n    constructor(detail) {\n        super('ix-select-item:valueChange', {\n            bubbles: true,\n            detail,\n        });\n    }\n}\n//# sourceMappingURL=events.js.map\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  display: block;\n  position: relative;\n}\n:host > ix-dropdown-item {\n  width: 100%;\n}\n:host ix-dropdown-item {\n  color: var(--theme-color-std-text);\n}\n:host .select-item-checked {\n  background-color: var(--theme-select-list-item--background--selected);\n  --ix-dropdown-item-checked-color: var(--theme-color-std-text);\n}\n\n:host(.display-none) {\n  display: none;\n}","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { IxSelectItemLabelChangeEvent, IxSelectItemValueChangeEvent, } from \"./events\";\nexport class SelectItem {\n    constructor() {\n        /**\n         * Flag indicating whether the item is selected\n         */\n        this.selected = false;\n        /**\n         * @internal\n         */\n        this.hover = false;\n        this.componentLoaded = false;\n    }\n    /** @internal */\n    async getDropdownItemElement() {\n        return this.dropdownItem;\n    }\n    /**\n     * @internal\n     * @param event\n     */\n    async onItemClick(event) {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        event === null || event === void 0 ? void 0 : event.stopPropagation();\n        this.itemClick.emit(this.value);\n    }\n    get dropdownItem() {\n        return this.hostElement.querySelector('ix-dropdown-item');\n    }\n    componentDidRender() {\n        if (this.value === undefined || this.value === null) {\n            console.warn('ix-select-item must have a `value` property');\n        }\n        this.componentLoaded = true;\n    }\n    onValueChange(newValue, oldValue) {\n        if (this.componentLoaded) {\n            this.hostElement.dispatchEvent(new IxSelectItemValueChangeEvent({\n                newValue: newValue,\n                oldValue: oldValue,\n            }));\n        }\n    }\n    labelChange(newValue, oldValue) {\n        if (this.componentLoaded) {\n            this.hostElement.dispatchEvent(new IxSelectItemLabelChangeEvent({\n                newValue: newValue,\n                oldValue: oldValue,\n            }));\n        }\n    }\n    render() {\n        return (h(Host, { key: '5fb345e674e981e79f0c44ac4a14a59987f34988' }, h(\"ix-dropdown-item\", { key: '7a3666f16d17e001fcbd9bd04fb143896ac48fe4', class: {\n                'select-item-checked': this.selected,\n            }, checked: this.selected, label: this.label ? this.label : this.value, onItemClick: (e) => this.onItemClick(e) })));\n    }\n    static get is() { return \"ix-select-item\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"select-item.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"select-item.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"label\": {\n                \"type\": \"string\",\n                \"attribute\": \"label\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Displayed name of the item\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"attribute\": \"value\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the item.\\nImportant: The select component uses string values to handle selection and will call toString() on this value.\\nTherefor a string should be passed to value to prevent unexpected behavior.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"selected\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Flag indicating whether the item is selected\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"hover\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"hover\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"itemClick\",\n                \"name\": \"itemClick\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Item clicked\"\n                },\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getDropdownItemElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLIxDropdownItemElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIxDropdownItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIxDropdownItemElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLIxDropdownItemElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"onItemClick\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: CustomEvent<HTMLIxDropdownItemElement>) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"CustomEvent<HTMLIxDropdownItemElement> | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"CustomEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::CustomEvent\"\n                        },\n                        \"HTMLIxDropdownItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIxDropdownItemElement\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"event\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"hostElement\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"value\",\n                \"methodName\": \"onValueChange\"\n            }, {\n                \"propName\": \"label\",\n                \"methodName\": \"labelChange\"\n            }];\n    }\n}\n//# sourceMappingURL=select-item.js.map\n"],"version":3}