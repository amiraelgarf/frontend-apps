{"file":"my-button.js","mappings":";;AAAA,MAAM,WAAW,GAAG,8gDAA8gD;;MCUrhDA,UAAQ,GAAAC,kBAAA,CAAA,MAAA,QAAA,SAAAC,CAAA,CAAA;;;;;;;AAIX,IAAA,KAAK;IAKL,OAAO,GAAkB,SAAS;IAKlC,IAAI,GAAe,QAAQ;IAK3B,QAAQ,GAAY,KAAK;AAKxB,IAAA,OAAO;IAER,WAAW,GAAG,MAAK;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;;AAExB,KAAC;IAED,MAAM,GAAA;AACJ,QAAA,MAAM,OAAO,GAAG;AACd,YAAA,WAAW,EAAE,IAAI;AACjB,YAAA,CAAC,cAAc,IAAI,CAAC,OAAO,CAAE,CAAA,GAAG,IAAI;AACpC,YAAA,CAAC,cAAc,IAAI,CAAC,IAAI,CAAE,CAAA,GAAG,IAAI;YACjC,qBAAqB,EAAE,IAAI,CAAC,QAAQ;SACrC;AAED,QAAA,QACE,CACE,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAC,QAAQ,EAEZ,EAAA,IAAI,CAAC,KAAK,CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["MyButton","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/Html-Tags-Component/my-button/my-button.css?tag=my-button&encapsulation=shadow","src/components/Html-Tags-Component/my-button/my-button.tsx"],"sourcesContent":[":host {\r\n  display: inline-block;\r\n}\r\n\r\n.my-button {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  line-height: 1;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  outline: none;\r\n}\r\n\r\n.my-button:focus-visible {\r\n  outline: 2px solid #005F87;\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* Size variants */\r\n.my-button--small {\r\n  padding: 8px 12px;\r\n  font-size: 14px;\r\n  min-height: 32px;\r\n}\r\n\r\n.my-button--medium {\r\n  padding: 12px 16px;\r\n  font-size: 16px;\r\n  min-height: 40px;\r\n}\r\n\r\n.my-button--large {\r\n  padding: 16px 24px;\r\n  font-size: 18px;\r\n  min-height: 48px;\r\n}\r\n\r\n.my-button--primary {\r\n  background-color: #005F87;\r\n  color: white;\r\n}\r\n\r\n.my-button--primary:hover:not(.my-button--disabled) {\r\n  background-color: #DAECF0;\r\n}\r\n\r\n.my-button--primary:active:not(.my-button--disabled) {\r\n  background-color: #005F87;\r\n}\r\n\r\n.my-button--secondary {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.my-button--secondary:hover:not(.my-button--disabled) {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.my-button--secondary:active:not(.my-button--disabled) {\r\n  background-color: #495057;\r\n}\r\n\r\n.my-button--outline {\r\n  background-color: transparent;\r\n  color: #005F87;\r\n  border: 2px solid #005F87;\r\n}\r\n\r\n.my-button--outline:hover:not(.my-button--disabled) {\r\n  background-color: #005F87;\r\n  color: white;\r\n}\r\n\r\n.my-button--outline:active:not(.my-button--disabled) {\r\n  background-color: #0052a3;\r\n  border-color: #0052a3;\r\n}\r\n\r\n.my-button--disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.my-button--disabled:hover,\r\n.my-button--disabled:active {\r\n  transform: none;\r\n}\r\n\r\n","import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline';\r\nexport type ButtonSize = 'small' | 'medium' | 'large';\r\n\r\n@Component({\r\n  tag: 'my-button',\r\n  styleUrl: 'my-button.css',\r\n  shadow: true,\r\n})\r\nexport class MyButton {\r\n  /**\r\n   * The text to display inside the button\r\n   */\r\n  @Prop() label!: string;\r\n\r\n  /**\r\n   * The visual variant of the button\r\n   */\r\n  @Prop() variant: ButtonVariant = 'primary';\r\n\r\n  /**\r\n   * The size of the button\r\n   */\r\n  @Prop() size: ButtonSize = 'medium';\r\n\r\n  /**\r\n   * Whether the button is disabled\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  /**\r\n   * Event emitted when the button is clicked\r\n   */\r\n  @Event() myClick: EventEmitter<void> | undefined;\r\n\r\n  private handleClick = () => {\r\n    if (!this.disabled) {\r\n      this.myClick?.emit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const classes = {\r\n      'my-button': true,\r\n      [`my-button--${this.variant}`]: true,\r\n      [`my-button--${this.size}`]: true,\r\n      'my-button--disabled': this.disabled,\r\n    };\r\n\r\n    return (\r\n      <button\r\n        class={classes}\r\n        disabled={this.disabled}\r\n        onClick={this.handleClick}\r\n        type=\"button\"\r\n      >\r\n        {this.label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n"],"version":3}