{"version":3,"file":"histogram-chart.entry.js","sources":["node_modules/d3-array/src/count.js","node_modules/d3-array/src/extent.js","node_modules/d3-array/src/identity.js","node_modules/d3-array/src/array.js","node_modules/d3-array/src/constant.js","node_modules/d3-array/src/nice.js","node_modules/d3-array/src/threshold/sturges.js","node_modules/d3-array/src/bin.js","src/components/Charts-Component/histogram-chart/histogram-chart.css?tag=histogram-chart&encapsulation=shadow","src/components/Charts-Component/histogram-chart/histogram-chart.tsx"],"sourcesContent":["export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function identity(x) {\n  return x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function constant(x) {\n  return () => x;\n}\n","import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n","import count from \"../count.js\";\n\nexport default function thresholdSturges(values) {\n  return Math.max(1, Math.ceil(Math.log(count(values)) / Math.LN2) + 1);\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        step,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = tickIncrement(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length, a = 0, b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[bisect(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : constant(Array.isArray(_) ? slice.call(_) : _), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","/* :host targets the custom element itself (<histogram-chart>) */\n:host {\n    display: block; /* Ensures the component takes up its own block space */\n    width: 100%; /* Make it responsive to its parent container */\n    height: 100%;\n    font-family: 'Inter', sans-serif; /* Apply Inter font globally to the component */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: #333; /* Default text color */\n}\n\n/* Styles for the main chart container div */\n.histogramChart {\n    display: flex; /* Use flexbox to center the SVG if needed */\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: #f8f9fa; /* Light background for the chart area */\n    border-radius: 12px; /* Rounded corners for the container */\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */\n    overflow: hidden; /* Hide any overflowing content */\n}\n\n/* Styles for the SVG element */\n.histogramChart svg {\n    display: block; /* Remove extra space below SVG */\n    margin: auto; /* Center the SVG within its flex container */\n    background-color: #ffffff; /* White background for the drawing area */\n    border-radius: 10px; /* Slightly more rounded than the outer container */\n}\n\n/* Styles for the chart title */\n.chart-title {\n    font-size: 24px; /* Larger font for the title */\n    font-weight: 600; /* Semi-bold title */\n    fill: #202124; /* Darker color for the title */\n}\n\n/* Styles for the histogram bars */\n/* Note: Fill colors are set directly in JS for dynamic coloring based on semester */\nrect {\n    transition: all 0.3s ease-in-out; /* Smooth transition for hover effects */\n}\n\nrect:hover {\n    opacity: 0.9 !important; /* Slightly more opaque on hover */\n    transform: translateY(-2px); /* Lift bars slightly on hover */\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Add shadow on hover */\n}\n\n/* Styles for the axes */\n.domain {\n    stroke: #aaa; /* Color of the axis line */\n    stroke-width: 1px;\n}\n\n.tick line {\n    stroke: #ccc; /* Color of the tick marks */\n    stroke-width: 0.5px;\n}\n\n.tick text {\n    font-size: 11px; /* Font size for axis tick labels */\n    fill: #555; /* Color for axis tick labels */\n}\n\n/* Styles for axis labels */\n.axis-label {\n    font-size: 14px;\n    font-weight: 500;\n    fill: #333;\n}\n\n/* Styles for the legend */\n.legend {\n    font-size: 12px;\n    fill: #555;\n}\n\n.legend rect {\n    stroke: #ccc; /* Border for legend color swatches */\n    stroke-width: 0.5px;\n}\n\n.legend text {\n    fill: #333;\n}\n\n/* General SVG text styling */\ntext {\n    /* This ensures all text elements within the SVG inherit the Inter font */\n    font-family: 'Inter', sans-serif;\n}\n\nrect.bar-s1, rect.bar-s2 {\n    cursor: pointer;\n}\n\n\n.info-text {\n    fill: #666;\n    font-style: italic;\n}\n\n.bar-s1, .bar-s2 {\n    cursor: pointer;\n    transition: opacity 0.2s ease;\n}","import { Component, h, Element, Prop, Watch } from '@stencil/core';\nimport * as d3 from 'd3';\n\n\ninterface GradeType\n{\n    name: string,\n    semester1:number,\n    semester2:number\n}\n\ntype HistogramBin = d3.Bin<number, number>;//for the Bins\n\n\nconst studentGrades :GradeType[]= [\n  { name: \"Student 1\", semester1: 78, semester2: 82 },\n  { name: \"Student 2\", semester1: 85, semester2: 88 },\n  { name: \"Student 3\", semester1: 92, semester2: 95 },\n  { name: \"Student 4\", semester1: 64, semester2: 70 },\n  { name: \"Student 5\", semester1: 71, semester2: 75 },\n  { name: \"Student 6\", semester1: 88, semester2: 91 },\n  { name: \"Student 7\", semester1: 53, semester2: 62 },\n  { name: \"Student 8\", semester1: 79, semester2: 83 },\n  { name: \"Student 9\", semester1: 95, semester2: 97 },\n  { name: \"Student 10\", semester1: 68, semester2: 73 },\n  { name: \"Student 11\", semester1: 82, semester2: 85 },\n  { name: \"Student 12\", semester1: 76, semester2: 80 },\n  { name: \"Student 13\", semester1: 89, semester2: 92 },\n  { name: \"Student 14\", semester1: 61, semester2: 68 },\n  { name: \"Student 15\", semester1: 73, semester2: 77 },\n  { name: \"Student 16\", semester1: 84, semester2: 87 },\n  { name: \"Student 17\", semester1: 57, semester2: 65 },\n  { name: \"Student 18\", semester1: 91, semester2: 94 },\n  { name: \"Student 19\", semester1: 67, semester2: 72 },\n  { name: \"Student 20\", semester1: 80, semester2: 84 },\n  { name: \"Student 21\", semester1: 74, semester2: 79 },\n  { name: \"Student 22\", semester1: 83, semester2: 86 },\n  { name: \"Student 23\", semester1: 69, semester2: 74 },\n  { name: \"Student 24\", semester1: 90, semester2: 93 },\n  { name: \"Student 25\", semester1: 58, semester2: 66 },\n  { name: \"Student 26\", semester1: 77, semester2: 81 },\n  { name: \"Student 27\", semester1: 86, semester2: 89 },\n  { name: \"Student 28\", semester1: 63, semester2: 69 },\n  { name: \"Student 29\", semester1: 94, semester2: 96 },\n  { name: \"Student 30\", semester1: 72, semester2: 76 },\n];\n\n@Component({\n    tag:\"histogram-chart\",\n    styleUrl:\"histogram-chart.css\",\n    shadow:true\n})\nexport class HistogramChart\n{\n    @Element() el! : HTMLElement;\n    @Prop() myWidth:number =800\n    @Prop() myHight:number=500\n    @Prop() nameOfChart:string=\"Grade in 1st Semester vs 2nd Semester\"\n    @Prop() binCount:number=10\n\n    @Prop() data: GradeType[] = []\n\n    private activeSemester: 'semester1' | 'semester2' | null = null;\n    private infoTextSelection: d3.Selection<SVGTextElement, unknown, null, undefined> | null = null;\n\n    renderHistogram()\n    {\n        const margin = { top: 70, right: 40, bottom: 60, left: 175 };\n        const width = this.myWidth - margin.left - margin.right;\n        const height = this.myHight - margin.top - margin.bottom;\n\n        const container = this.el.shadowRoot?.querySelector('.histogramChart');\n        if (container) {\n            container.innerHTML = '';//remove the repreted SVG\n        }\n        const svg = d3.select(this.el.shadowRoot?.querySelector('.histogramChart')!)\n                    .append('svg')\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append('g')\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append(\"text\")\n            .attr(\"class\",\"chart-title\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", -20)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"20px\")\n            .text(this.nameOfChart);\n\n        // this.infoTextSelection = svg.append(\"text\")\n        //     .attr(\"class\", \"info-text\")\n        //     .attr(\"x\", width / 2)\n        //     .attr(\"y\", -40)\n        //     .style(\"text-anchor\", \"middle\")\n        //     .style(\"font-size\", \"14px\")\n        //     .text(\"\");\n\n        const allGrade :number[] = [...this.data.map(d=>d.semester1) , ...this.data.map(d=>d.semester2 )]\n                                                                                        .filter((grade): grade is number=> grade !== undefined && grade !== null);\n\n        const x= d3.scaleLinear<number,number>()\n                        .domain([0, d3.max(allGrade)||0])\n                        .range([0,width])\n                        .nice()\n\n        const bins = d3.histogram()\n            .value(d=>d)\n            .domain(x.domain() as [number,number])// Ensure domain is [min, max] (and the return from xScale is number[])\n            .thresholds(x.ticks(this.binCount)); // Divides the domain into `binCount` (e.g., 10) equal intervals\n        \n        const semester1Bins = bins(this.data.map(d => d.semester1));\n        const semester2Bins = bins(this.data.map(d => d.semester2));\n\n        // Y scale (frequency)\n        const y = d3.scaleLinear()\n            .domain([0, d3.max([...semester1Bins, ...semester2Bins], d => d.length)||0])\n            .range([height, 0])\n            .nice();\n\n        // Color scale\n         const color = d3.scaleOrdinal<string, string>()\n            .domain([\"semester1\", \"semester2\"])\n            .range([\"#1f77b4\", \"#ff7f0e\"])\n\n        // // Function to update bar opacities based on active semester\n        // const updateOpacities = () => {\n        //     svg.selectAll<SVGRectElement, HistogramBin>(\".bar-s1\")\n        //         .transition().duration(200)\n        //         .attr(\"opacity\", this.activeSemester === 'semester2' ? 0.2 : \n        //             this.activeSemester === 'semester1' ? 1.0 : 0.7);\n\n        //     svg.selectAll<SVGRectElement, HistogramBin>(\".bar-s2\")\n        //         .transition().duration(200)\n        //         .attr(\"opacity\", this.activeSemester === 'semester1' ? 0.2 : \n        //             this.activeSemester === 'semester2' ? 1.0 : 0.7);\n        // };\n\n        //  // Click handler for bars\n        // const handleBarClick = (event: Event, semester: 'semester1' | 'semester2') => {\n        // event.stopPropagation();\n        \n        // if (this.activeSemester === semester) {\n        //     this.activeSemester = null;\n        //     if (this.infoTextSelection) {\n        //         this.infoTextSelection.text(\"\");\n        //     }\n        // } else {\n        //     this.activeSemester = semester;\n        //     if (this.infoTextSelection) {\n        //         this.infoTextSelection.text(`Showing: ${semester === 'semester1' ? 'Semester 1' : 'Semester 2'}`);\n        //     }\n        //     }\n        //     updateOpacities(); // Apply opacity changes\n        // };\n        \n        // Draw semester 1 histogram\n        svg.selectAll<SVGRectElement, HistogramBin>(\".semester1\")\n            .data(semester1Bins)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar-s1\") \n            .attr(\"x\", d => x(d.x0 ?? 0) + 1) // X position of the bar (start of the bin + small offset)\n            .attr(\"y\", d => y(d.length ?? 0)) // Y position of the bar (top of the bar based on frequency)\n            .attr(\"width\", d => {\n                const x0 = d.x0 ?? 0;\n                const x1 = d.x1 ?? x0 + 1;\n                return Math.max(0, x(x1) - x(x0) - 1);// Calculate bar width\n            })\n            .attr(\"height\", d => height - y(d.length ?? 0))// Height of the bar\n            .attr(\"fill\", () => color(\"semester1\") as string)\n            .attr(\"rx\", 5) // Rounded corners (horizontal)\n            .attr(\"ry\", 5) // Rounded corners (vertical)\n            .attr(\"opacity\", 0.7) // Make bars slightly transparent for overlay effect\n            // .on(\"click\", function(event) { \n            // handleBarClick(event, 'semester1');\n            // });\n\n\n            // Draw semester 2 histogram (overlaid)\n            svg.selectAll<SVGRectElement, HistogramBin>(\".semester2\")\n                .data(semester2Bins)\n                .enter().append(\"rect\")\n                .attr(\"class\", \"bar-s2\")\n                .attr(\"x\", d => x(d.x0 ?? 0) + 1)\n                .attr(\"y\", d => y(d.length ?? 0))\n                .attr(\"width\", d => {\n                    const x0 = d.x0 ?? 0;\n                    const x1 = d.x1 ?? x0 + 1;\n                    return Math.max(0, x(x1) - x(x0) - 1);\n                })\n                .attr(\"height\", d => height - y(d.length ?? 0))\n                .attr(\"fill\", () => color(\"semester2\") as string)\n                .attr(\"rx\", 5) // Rounded corners (horizontal)\n                .attr(\"ry\", 5) // Rounded corners (vertical)\n                .attr(\"opacity\", 0.7) // Make bars slightly transparent for overlay effect\n                // .on(\"click\", function(event) { \n                //  handleBarClick(event, 'semester2'); \n                // });\n\n            // svg.append(\"rect\")\n            // .attr(\"width\", width)\n            // .attr(\"height\", height)\n            // .attr(\"fill\", \"transparent\")\n            // .on(\"click\", () => {\n            //     this.activeSemester = null;\n            //     if (this.infoTextSelection) {\n            //         this.infoTextSelection.text(\"\");\n            //     }\n            //     updateOpacities();\n            // });\n\n\n            // Add X axis\n            svg.append(\"g\")\n            .attr(\"transform\", `translate(0,${height})`)\n            .call(d3.axisBottom(x))\n            .append(\"text\")\n            .attr(\"x\", width / 2)\n            .attr(\"y\", 35)\n            .attr(\"fill\", \"#000\")\n            .text(\"Grade Ranges\");\n\n            // Add Y axis\n            svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -40)\n            .attr(\"x\", -height / 2)\n            .attr(\"fill\", \"#000\")\n            .text(\"Number of Students\");\n\n\n            // Add legend\n            const legend = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width - 100}, 20)`);\n\n            legend.append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"width\", 18)\n            .attr(\"height\", 18)\n            .attr(\"fill\", color(\"semester1\"))\n            .attr(\"opacity\", 0.6);\n\n            legend.append(\"text\")\n            .attr(\"x\", 25)\n            .attr(\"y\", 9)\n            .attr(\"dy\", \"0.35em\")\n            .text(\"Semester 1\");\n\n            legend.append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 25)\n            .attr(\"width\", 18)\n            .attr(\"height\", 18)\n            .attr(\"fill\", color(\"semester2\"))\n            .attr(\"opacity\", 0.6);\n\n            legend.append(\"text\")\n            .attr(\"x\", 25)\n            .attr(\"y\", 34)\n            .attr(\"dy\", \"0.35em\")\n            .text(\"Semester 2\");\n\n    }\n\n    @Watch('myWidth')\n    @Watch('myHeight')\n    @Watch('nameOfChart')\n    @Watch('binCount')\n    @Watch(\"data\")\n    OnPropChange() {\n        this.renderHistogram();\n    }\n\n    componentDidLoad() {\n        this.renderHistogram();\n    }\n    componentDidUpdate() {\n        this.renderHistogram();\n    }\n    render()\n    {\n        return(<div class=\"histogramChart\"></div>)\n    }\n}"],"names":["sturges","bisect","d3.select","d3.scaleLinear","d3.max","d3.histogram","d3.scaleOrdinal","d3.axisBottom","d3.axisLeft"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}