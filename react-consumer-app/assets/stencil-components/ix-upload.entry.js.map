{"version":3,"file":"ix-upload.entry.js","sources":["node_modules/@siemens/ix/dist/collection/components/upload/upload-file-state.js","node_modules/@siemens/ix/dist/collection/components/upload/upload.css?tag=ix-upload&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/upload/upload.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// eslint-disable-next-line @stencil-community/ban-exported-const-enums\nexport var UploadFileState;\n(function (UploadFileState) {\n    UploadFileState[\"SELECT_FILE\"] = \"SELECT_FILE\";\n    UploadFileState[\"LOADING\"] = \"LOADING\";\n    UploadFileState[\"UPLOAD_FAILED\"] = \"UPLOAD_FAILED\";\n    UploadFileState[\"UPLOAD_SUCCESSED\"] = \"UPLOAD_SUCCESSED\";\n})(UploadFileState || (UploadFileState = {}));\n//# sourceMappingURL=upload-file-state.js.map\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* Dimensions */\n/* Font sizes */\n/* Line heights */\n/* Animation timings */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n  display: block;\n  min-height: 4rem;\n  height: 4rem;\n}\n:host *,\n:host *::after,\n:host *::before {\n  box-sizing: border-box;\n}\n:host ::-webkit-scrollbar-button {\n  display: none;\n}\n@-moz-document url-prefix() {\n  :host * {\n    scrollbar-color: var(--theme-scrollbar-thumb--background) var(--theme-scrollbar-track--background);\n    scrollbar-width: thin;\n  }\n}\n:host ::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n:host ::-webkit-scrollbar-track {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-track--background);\n}\n:host ::-webkit-scrollbar-track:hover {\n  background: var(--theme-scrollbar-track--background--hover);\n}\n:host ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-thumb--background);\n}\n:host ::-webkit-scrollbar-thumb:hover {\n  background: var(--theme-scrollbar-thumb--background--hover);\n}\n:host ::-webkit-scrollbar-corner {\n  display: none;\n}\n:host .file-upload-area {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  padding: 1rem;\n  border: 1px dashed var(--theme-upload--border-color);\n  border-radius: var(--theme-upload--border-radius);\n  color: var(--theme-upload-text--color);\n}\n:host .file-upload-area.multiline {\n  max-height: unset;\n  height: auto;\n}\n:host .file-upload-area.multiline .glyph {\n  align-self: flex-start;\n  margin-block-start: 3px;\n}\n:host .file-upload-area.multiline > div {\n  align-self: flex-start;\n}\n:host .file-upload-area:not(.multiline) .state,\n:host .file-upload-area:not(.multiline) .upload-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n:host .file-upload-area:not(.disabled).file-over {\n  border-color: var(--theme-upload--border-color--dragover);\n  border-style: solid;\n}\n:host .file-upload-area.checking {\n  color: var(--theme-upload-text--color--checking);\n  border-style: solid;\n}\n:host .file-upload-area.disabled {\n  border-style: solid;\n  color: var(--theme-upload-text--color--disabled);\n}\n:host .file-upload-area ix-button {\n  margin-inline-start: 1rem;\n}\n:host .file-upload-area .upload-browser {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n:host .file-upload-area .loader {\n  margin: 2.187rem auto;\n  font-size: 0.937rem;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  animation: optimise-loading 1.1s infinite ease;\n  transform: translateZ(0);\n}\n:host .file-upload-area .upload-filename {\n  margin-bottom: 1rem;\n}\n:host .file-upload-area .state {\n  display: flex;\n  align-items: center;\n}\n:host .file-upload-area .state > ix-spinner {\n  margin-inline-end: 0.5rem;\n}\n:host .file-upload-area .state > ix-icon {\n  margin-inline-end: 0.5rem;\n}\n:host .file-upload-area .state > ix-icon.icon-error {\n  color: var(--theme-color-alarm);\n}\n:host .file-upload-area .state > ix-icon.icon-success {\n  color: var(--theme-color-success);\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s)\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { h, Host, } from \"@stencil/core\";\nimport { UploadFileState } from \"./upload-file-state\";\nimport { iconError, iconSuccess } from \"@siemens/ix-icons/icons\";\nimport { a11yHostAttributes } from \"../utils/a11y\";\nexport class Upload {\n    get inputElement() {\n        return this.hostElement.shadowRoot.querySelector('#upload-browser');\n    }\n    constructor() {\n        /**\n         * If multiple is true the user can drop or select multiple files\n         */\n        this.multiple = false;\n        /**\n         * Whether the text should wrap to more than one line\n         */\n        this.multiline = false;\n        /**\n         * Disable all input events\n         */\n        this.disabled = false;\n        /**\n         * After a file is uploaded you can set the upload component to a defined state\n         */\n        this.state = UploadFileState.SELECT_FILE;\n        /**\n         * Will be used by state = UploadFileState.SELECT_FILE\n         */\n        this.selectFileText = '+ Drag files here or…';\n        /**\n         * Will be used by state = UploadFileState.LOADING\n         */\n        this.loadingText = 'Checking files…';\n        /**\n         * Will be used by state = UploadFileState.UPLOAD_FAILED\n         */\n        this.uploadFailedText = 'Upload failed. Please try again.';\n        /**\n         * Will be used by state = UploadFileState.UPLOAD_SUCCESSED\n         */\n        this.uploadSuccessText = 'Upload successful';\n        /**\n         * Label for upload file button\n         */\n        this.i18nUploadFile = 'Upload file…';\n        /**\n         * Text for disabled state\n         */\n        this.i18nUploadDisabled = 'File upload currently not possible.';\n        this.isFileOver = false;\n        this.a11y = {};\n    }\n    componentWillLoad() {\n        this.a11y = a11yHostAttributes(this.hostElement);\n    }\n    fileDropped(evt) {\n        evt.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        if (!evt.dataTransfer) {\n            return;\n        }\n        const file = evt.dataTransfer.files;\n        this.isFileOver = false;\n        this.filesToUpload = this.convertToFileArray(file);\n        this.filesChanged.emit(this.filesToUpload);\n    }\n    fileOver(event) {\n        if (!event.dataTransfer) {\n            return;\n        }\n        if (this.state !== UploadFileState.LOADING) {\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'move';\n        }\n        if (!this.multiple && event.dataTransfer.items.length > 1) {\n            event.preventDefault();\n            event.stopPropagation();\n            event.dataTransfer.effectAllowed = 'none';\n            event.dataTransfer.dropEffect = 'none';\n        }\n        else {\n            this.isFileOver = true;\n        }\n    }\n    fileLeave() {\n        this.isFileOver = false;\n    }\n    fileChangeEvent(event) {\n        if (this.disabled) {\n            return;\n        }\n        if (!event.target) {\n            return;\n        }\n        this.filesToUpload = this.convertToFileArray(event.target.files);\n        this.filesChanged.emit(this.filesToUpload);\n        // Workaround for bug in native input element, that prevents the user from uploading\n        // a file with the same name as the most recent one, but with changed content.\n        this.inputElement.type = '';\n        this.inputElement.type = 'file';\n    }\n    convertToFileArray(filesFromEvent) {\n        let files = [];\n        if (!filesFromEvent) {\n            return [];\n        }\n        if (filesFromEvent instanceof FileList) {\n            files = Array.from(filesFromEvent);\n        }\n        else {\n            files = [filesFromEvent];\n        }\n        return files;\n    }\n    renderUploadState() {\n        if (this.disabled) {\n            return (h(\"span\", { class: \"state\" }, h(\"span\", { class: \"upload-text\" }, this.i18nUploadDisabled)));\n        }\n        switch (this.state) {\n            case UploadFileState.SELECT_FILE:\n                return (h(\"span\", { class: \"state\" }, h(\"span\", { class: \"upload-text\" }, this.selectFileText)));\n            case UploadFileState.LOADING:\n                return (h(\"span\", { class: \"state\" }, h(\"ix-spinner\", { variant: \"primary\" }), h(\"span\", { class: \"upload-text\" }, this.loadingText)));\n            case UploadFileState.UPLOAD_FAILED:\n                return (h(\"span\", { class: \"state\" }, h(\"ix-icon\", { name: iconError, class: \"icon-error\" }), h(\"span\", { class: \"upload-text\" }, this.uploadFailedText)));\n            case UploadFileState.UPLOAD_SUCCESSED:\n                return (h(\"span\", { class: \"state\" }, h(\"ix-icon\", { name: iconSuccess, class: \"icon-success\" }), h(\"span\", { class: \"upload-text\" }, this.uploadSuccessText)));\n            default:\n                return '';\n        }\n    }\n    /**\n     * Set files\n     * @param obj\n     */\n    async setFilesToUpload(obj) {\n        this.filesToUpload = obj;\n    }\n    render() {\n        const disabled = this.disabled || this.state === UploadFileState.LOADING;\n        const _a = this.a11y, { 'aria-label': ariaLabel = 'Upload files' } = _a, a11y = __rest(_a, ['aria-label']);\n        return (h(Host, Object.assign({ key: '2c5f628e52e7b1a591a5372adbe851f3ef558f06' }, a11y, { \"aria-disabled\": disabled }), h(\"div\", { key: '26c7e62a920f6ee6101cad27df95650ae20bedc1', class: {\n                'file-upload-area': true,\n                'file-over': this.state !== UploadFileState.LOADING && this.isFileOver,\n                checking: this.state === UploadFileState.LOADING,\n                disabled: this.disabled,\n                multiline: this.multiline,\n            }, onDrop: (e) => {\n                if (this.state !== UploadFileState.LOADING) {\n                    this.fileDropped(e);\n                }\n            }, onDragOver: (e) => this.fileOver(e), onDragLeave: () => this.fileLeave(), draggable: !this.disabled }, this.renderUploadState(), h(\"div\", { key: '9b32b9d0e31bd04b158bdd2b1229cdb559373105' }, h(\"input\", { key: '9cf78f9f8c05e391abbe36be0fd047458736d4fa', \"aria-label\": ariaLabel, \"aria-disabled\": disabled, multiple: this.multiple, type: \"file\", class: \"upload-browser\", id: \"upload-browser\", tabindex: \"-1\", onChange: (e) => {\n                this.fileChangeEvent(e);\n            }, accept: this.accept, disabled: disabled }), h(\"ix-button\", { key: '2340bc932ec97f948024c59f40fbe3a0be1aaaa5', \"aria-disabled\": disabled, outline: true, onClick: () => this.inputElement.click(), disabled: disabled }, this.i18nUploadFile)))));\n    }\n    static get is() { return \"ix-upload\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"upload.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"upload.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"accept\": {\n                \"type\": \"string\",\n                \"attribute\": \"accept\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The accept attribute specifies the types of files that the server accepts (that can be submitted through a file upload).\\n[accept]{@link \\\"https://www.w3schools.com/tags/att_input_accept.asp\\\"}\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"multiple\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If multiple is true the user can drop or select multiple files\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"multiline\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"multiline\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Whether the text should wrap to more than one line\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Disable all input events\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"state\": {\n                \"type\": \"string\",\n                \"attribute\": \"state\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"UploadFileState\",\n                    \"resolved\": \"UploadFileState.LOADING | UploadFileState.SELECT_FILE | UploadFileState.UPLOAD_FAILED | UploadFileState.UPLOAD_SUCCESSED\",\n                    \"references\": {\n                        \"UploadFileState\": {\n                            \"location\": \"import\",\n                            \"path\": \"./upload-file-state\",\n                            \"id\": \"src/components/upload/upload-file-state.ts::UploadFileState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"After a file is uploaded you can set the upload component to a defined state\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"UploadFileState.SELECT_FILE\"\n            },\n            \"selectFileText\": {\n                \"type\": \"string\",\n                \"attribute\": \"select-file-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Will be used by state = UploadFileState.SELECT_FILE\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'+ Drag files here or\\u2026'\"\n            },\n            \"loadingText\": {\n                \"type\": \"string\",\n                \"attribute\": \"loading-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Will be used by state = UploadFileState.LOADING\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Checking files\\u2026'\"\n            },\n            \"uploadFailedText\": {\n                \"type\": \"string\",\n                \"attribute\": \"upload-failed-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Will be used by state = UploadFileState.UPLOAD_FAILED\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Upload failed. Please try again.'\"\n            },\n            \"uploadSuccessText\": {\n                \"type\": \"string\",\n                \"attribute\": \"upload-success-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Will be used by state = UploadFileState.UPLOAD_SUCCESSED\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Upload successful'\"\n            },\n            \"i18nUploadFile\": {\n                \"type\": \"string\",\n                \"attribute\": \"i-1-8n-upload-file\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Label for upload file button\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Upload file\\u2026'\"\n            },\n            \"i18nUploadDisabled\": {\n                \"type\": \"string\",\n                \"attribute\": \"i-1-8n-upload-disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Text for disabled state\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'File upload currently not possible.'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isFileOver\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"filesChanged\",\n                \"name\": \"filesChanged\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"You get an array of Files after drop-action or browse action is finished\"\n                },\n                \"complexType\": {\n                    \"original\": \"Array<File>\",\n                    \"resolved\": \"File[]\",\n                    \"references\": {\n                        \"Array\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Array\"\n                        },\n                        \"File\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::File\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFilesToUpload\": {\n                \"complexType\": {\n                    \"signature\": \"(obj: any) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"obj\",\n                            \"type\": \"any\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Set files\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"obj\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"hostElement\"; }\n}\n//# sourceMappingURL=upload.js.map\n"],"names":["this"],"mappings":"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","x_google_ignoreList":[0,1,2]}