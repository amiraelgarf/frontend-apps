{"version":3,"file":"ix-date-dropdown.entry.js","sources":["node_modules/@siemens/ix/dist/collection/components/date-dropdown/date-dropdown.css?tag=ix-date-dropdown&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/date-dropdown/date-dropdown.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* Dimensions */\n/* Font sizes */\n/* Line heights */\n/* Animation timings */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n  display: inline-block;\n  position: relative;\n}\n:host *,\n:host *::after,\n:host *::before {\n  box-sizing: border-box;\n}\n:host ::-webkit-scrollbar-button {\n  display: none;\n}\n@-moz-document url-prefix() {\n  :host * {\n    scrollbar-color: var(--theme-scrollbar-thumb--background) var(--theme-scrollbar-track--background);\n    scrollbar-width: thin;\n  }\n}\n:host ::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n:host ::-webkit-scrollbar-track {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-track--background);\n}\n:host ::-webkit-scrollbar-track:hover {\n  background: var(--theme-scrollbar-track--background--hover);\n}\n:host ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-thumb--background);\n}\n:host ::-webkit-scrollbar-thumb:hover {\n  background: var(--theme-scrollbar-thumb--background--hover);\n}\n:host ::-webkit-scrollbar-corner {\n  display: none;\n}\n@media (max-width: 48em) {\n  :host .min-width {\n    width: -moz-min-content;\n    width: min-content;\n  }\n}\n@media (min-width: 48em) {\n  :host .border-right {\n    border-right: var(--theme-x-weak-bdr-2);\n  }\n}\n:host ix-button {\n  width: 100%;\n}\n:host .max-height {\n  max-height: -moz-max-content;\n  max-height: max-content;\n}\n:host .no-margin {\n  margin: 0;\n  padding: 0;\n}\n:host .pull-right {\n  float: right;\n  padding: 0 1rem 0.75rem 1rem;\n}","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Fragment, h, Host, } from \"@stencil/core\";\nimport { DateTime } from \"luxon\";\nimport { makeRef } from \"../utils/make-ref\";\nimport { iconHistory } from \"@siemens/ix-icons/icons\";\nexport class DateDropdown {\n    constructor() {\n        /**\n         * Disable the button that opens the dropdown containing the date picker.\n         */\n        this.disabled = false;\n        /**\n         * Date format string.\n         * See @link https://moment.github.io/luxon/#/formatting?id=table-of-tokens for all available tokens.\n         */\n        this.format = 'yyyy/LL/dd';\n        /**\n         * If true a range of dates can be selected.\n         */\n        this.range = true;\n        /**\n         * Picker date. If the picker is in range mode this property is the start date.\n         * If set to `null` no default start date will be pre-selected.\n         *\n         * Format is based on `format`\n         */\n        this.from = '';\n        /**\n         * Picker date. If the picker is in range mode this property is the end date.\n         * If the picker is not in range mode leave this value `null`\n         *\n         * Format is based on `format`\n         */\n        this.to = '';\n        /**\n         * The earliest date that can be selected by the date picker.\n         * If not set there will be no restriction.\n         */\n        this.minDate = '';\n        /**\n         * The latest date that can be selected by the date picker.\n         * If not set there will be no restriction.\n         */\n        this.maxDate = '';\n        /**\n         * Used to set the initial select date range as well as the button name,\n         * if not set or no according date range label is found, nothing will be selected\n         */\n        this.dateRangeId = 'custom';\n        /**\n         * Button variant\n         */\n        this.variant = 'primary';\n        /**\n         * Outline button\n         */\n        this.outline = false;\n        /**\n         * Button with no background or outline\n         */\n        this.ghost = false;\n        /**\n         * Loading button\n         */\n        this.loading = false;\n        /**\n         * Shows week numbers displayed on the left side of the date picker\n         *\n         * @since 3.0.0\n         */\n        this.showWeekNumbers = false;\n        /**\n         * Controls whether the user is allowed to pick custom date ranges in the component.\n         * When set to 'true', the user can select a custom date range using the date picker.\n         * When set to 'false', only predefined time date ranges are available for selection.\n         */\n        this.customRangeAllowed = true;\n        /**\n         * An array of predefined date range options for the date picker.\n         * Each option is an object with a label describing the range and a function\n         * that returns the start and end dates of the range as a DateRangeOption object.\n         *\n         * Example format:\n         *   {\n         *     id: 'some unique id',\n         *     label: 'Name of the range',\n         *     from: undefined, to: '2023/03/29'\n         *   },\n         *   // ... other predefined date range options ...\n         */\n        this.dateRangeOptions = [];\n        /**\n         * The index of which day to start the week on, based on the Locale#weekdays array.\n         * E.g. if the locale is en-us, weekStartIndex = 1 results in starting the week on monday.\n         */\n        this.weekStartIndex = 0;\n        /**\n         * Text for custom dropdown item. Will be used for translation.\n         */\n        this.i18nCustomItem = 'Custom...';\n        /**\n         * Text for the done button. Will be used for translation.\n         */\n        this.i18nDone = 'Done';\n        /**\n         * Text for the done button. Will be used for translation.\n         */\n        this.i18nNoRange = 'No range set';\n        /** @internal */\n        this.today = DateTime.now().toISO();\n        this.selectedDateRangeId = '';\n        this.triggerRef = makeRef();\n        this.datePickerTouched = false;\n    }\n    onDateRangeIdChange() {\n        this.onRangeListSelect(this.dateRangeId);\n        this.updateCurrentDate();\n        this.setDateRangeSelection(this.dateRangeId);\n        if (!this.currentRangeValue) {\n            return;\n        }\n        this.onDateSelect({\n            from: this.currentRangeValue.from,\n            to: this.currentRangeValue.to,\n            id: this.currentRangeValue.id,\n        });\n    }\n    onDateRangeOptionsChange() {\n        this.initialize();\n        this.onDateRangeIdChange();\n    }\n    onDisabledChange() {\n        if (this.disabled) {\n            this.closeDropdown();\n        }\n    }\n    componentWillLoad() {\n        this.initialize();\n        this.setDateRangeSelection(this.dateRangeId);\n    }\n    /**\n     * Retrieves the currently selected date range from the component.\n     * This method returns the selected date range as a `DateChangeEvent` object.\n     */\n    async getDateRange() {\n        return this.currentRangeValue || { id: '', from: '', to: '' };\n    }\n    initialize() {\n        const isCustomRange = this.dateRangeId === 'custom' ||\n            (!this.dateRangeId && !!this.from && !!this.to);\n        if (isCustomRange && this.customRangeAllowed) {\n            this.selectedDateRangeId = 'custom';\n            this.updateCurrentDate();\n            return;\n        }\n        const isValidConfiguration = !isCustomRange && !this.from;\n        if (!isValidConfiguration) {\n            console.warn('\"from\" and \"range-date-id\" is provided this is an invalid combination. Using \"custom\".');\n            this.selectedDateRangeId = 'custom';\n            this.updateCurrentDate();\n            return;\n        }\n    }\n    updateCurrentDate() {\n        this.currentRangeValue = {\n            id: this.selectedDateRangeId,\n            from: this.from,\n            to: this.to,\n        };\n    }\n    onDateSelect(rangeValue, preserveDropdown = true) {\n        this.dateRangeChange.emit(rangeValue);\n        if (preserveDropdown) {\n            this.closeDropdown();\n        }\n        this.datePickerTouched = false;\n    }\n    onRangeListSelect(id) {\n        if (this.setDateRangeSelection(id) && this.currentRangeValue) {\n            this.onDateSelect(this.currentRangeValue);\n        }\n    }\n    setDateRangeSelection(id) {\n        this.selectedDateRangeId = id;\n        const option = this.dateRangeOptions.find((range) => range.id === id);\n        if (option) {\n            this.currentRangeValue = option;\n        }\n        return option;\n    }\n    closeDropdown() {\n        const dropdown = this.hostElement.shadowRoot.querySelector('ix-dropdown');\n        if (dropdown) {\n            dropdown.show = false;\n        }\n    }\n    getButtonLabel() {\n        var _a, _b;\n        if (this.selectedDateRangeId === 'custom' && ((_a = this.currentRangeValue) === null || _a === void 0 ? void 0 : _a.from)) {\n            let range = this.currentRangeValue.from;\n            if (this.currentRangeValue.to) {\n                range += ` - ${this.currentRangeValue.to}`;\n            }\n            return range;\n        }\n        if (!this.selectedDateRangeId) {\n            return this.i18nNoRange;\n        }\n        if (!this.dateRangeOptions || ((_b = this.dateRangeOptions) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n            return this.i18nNoRange;\n        }\n        const option = this.dateRangeOptions.find((option) => option.id === this.selectedDateRangeId);\n        if (!option) {\n            console.error(`Cannot find range option with id ${this.selectedDateRangeId}`);\n            return this.i18nNoRange;\n        }\n        return option.label;\n    }\n    render() {\n        var _a, _b, _c;\n        return (h(Host, { key: '8a5ae63cb553e80b85681b489b6ea97350827867' }, h(\"ix-button\", { key: '0608d3a9063c9b729fbdda08b9a4f4441a19d039', \"data-testid\": \"date-dropdown-trigger\", \"data-date-dropdown-trigger\": true, variant: this.variant, ghost: this.ghost, outline: this.outline, loading: this.loading, icon: iconHistory, ref: this.triggerRef, disabled: this.disabled }, this.getButtonLabel()), h(\"ix-dropdown\", { key: 'd266a82bca22d8fe1009d55a29f485778ebf8b4c', \"data-testid\": \"date-dropdown\", \"data-date-dropdown\": true, class: \"min-width max-height\", trigger: this.triggerRef.waitForCurrent(), closeBehavior: \"outside\", placement: \"bottom-start\", onShowChanged: ({ detail: show }) => {\n                if (!show &&\n                    this.selectedDateRangeId === 'custom' &&\n                    this.datePickerTouched &&\n                    this.currentRangeValue) {\n                    this.onDateSelect(this.currentRangeValue);\n                }\n            } }, h(\"ix-layout-grid\", { key: 'c7a01092a838122a1041651c6a0f9c5eb74c2aae', noMargin: true }, h(\"ix-row\", { key: 'a6ed728fd08a35d8f0b3e71f115e0c258780474b' }, ((_a = this.dateRangeOptions) === null || _a === void 0 ? void 0 : _a.length) > 1 && (h(\"ix-col\", { key: 'e698f56587ad326e808bf8972c856fb74ac60ee9', class: {\n                'no-margin': true,\n                'border-right': this.selectedDateRangeId === 'custom',\n            } }, this.dateRangeOptions.map((dateRangeOption) => (h(\"ix-dropdown-item\", { label: dateRangeOption.label, onClick: () => this.onRangeListSelect(dateRangeOption.id), checked: this.selectedDateRangeId === dateRangeOption.id }))), h(\"div\", { key: 'd2c9d06535272b384b6d730c885c8c1db8071c07', hidden: !this.customRangeAllowed }, h(\"ix-dropdown-item\", { key: '067c2ff3f3f977876a5b554dfd0c16b67fbab5b7', label: this.i18nCustomItem, checked: this.selectedDateRangeId === 'custom', onClick: () => this.onRangeListSelect('custom') })))), h(\"ix-col\", { key: 'af0d3397302ba7891efa9953f5ec2805255acc23', class: \"no-margin\" }, this.selectedDateRangeId === 'custom' && (h(Fragment, { key: '715a8468214d59dd7f4891d78fb781c7c1987685' }, h(\"ix-date-picker\", { key: 'cbcc5f9b33b736444359fb67fa96a22d82713013', standaloneAppearance: false, locale: this.locale, onDateChange: (e) => {\n                e.stopPropagation();\n                this.currentRangeValue = Object.assign(Object.assign({}, e.detail), { id: 'custom' });\n                this.datePickerTouched = true;\n            }, onDateRangeChange: (e) => e.stopPropagation(), format: this.format, range: this.range, from: this.from || ((_b = this.currentRangeValue) === null || _b === void 0 ? void 0 : _b.from), to: this.to || ((_c = this.currentRangeValue) === null || _c === void 0 ? void 0 : _c.to), minDate: this.minDate, maxDate: this.maxDate, today: this.today, weekStartIndex: this.weekStartIndex, showWeekNumbers: this.showWeekNumbers }), h(\"div\", { key: 'd98f59b3e959f64fd5d7c4be6e19486616568865', class: \"pull-right\" }, h(\"ix-button\", { key: 'e30da682a1d4fecd958b6ed3c70d5f4bccc3e141', onClick: () => {\n                if (this.currentRangeValue) {\n                    this.onDateSelect(this.currentRangeValue);\n                }\n            } }, this.i18nDone))))))))));\n    }\n    static get is() { return \"ix-date-dropdown\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"date-dropdown.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"date-dropdown.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Disable the button that opens the dropdown containing the date picker.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"format\": {\n                \"type\": \"string\",\n                \"attribute\": \"format\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"link\",\n                            \"text\": \"https://moment.github.io/luxon/#/formatting?id=table-of-tokens for all available tokens.\"\n                        }],\n                    \"text\": \"Date format string.\\nSee\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'yyyy/LL/dd'\"\n            },\n            \"range\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"range\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true a range of dates can be selected.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"from\": {\n                \"type\": \"string\",\n                \"attribute\": \"from\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Picker date. If the picker is in range mode this property is the start date.\\nIf set to `null` no default start date will be pre-selected.\\n\\nFormat is based on `format`\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            },\n            \"to\": {\n                \"type\": \"string\",\n                \"attribute\": \"to\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Picker date. If the picker is in range mode this property is the end date.\\nIf the picker is not in range mode leave this value `null`\\n\\nFormat is based on `format`\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            },\n            \"minDate\": {\n                \"type\": \"string\",\n                \"attribute\": \"min-date\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The earliest date that can be selected by the date picker.\\nIf not set there will be no restriction.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            },\n            \"maxDate\": {\n                \"type\": \"string\",\n                \"attribute\": \"max-date\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The latest date that can be selected by the date picker.\\nIf not set there will be no restriction.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            },\n            \"dateRangeId\": {\n                \"type\": \"string\",\n                \"attribute\": \"date-range-id\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Used to set the initial select date range as well as the button name,\\nif not set or no according date range label is found, nothing will be selected\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'custom'\"\n            },\n            \"variant\": {\n                \"type\": \"string\",\n                \"attribute\": \"variant\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ButtonVariant\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\",\n                    \"references\": {\n                        \"ButtonVariant\": {\n                            \"location\": \"import\",\n                            \"path\": \"../button/button\",\n                            \"id\": \"src/components/button/button.tsx::ButtonVariant\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Button variant\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'primary'\"\n            },\n            \"outline\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"outline\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Outline button\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"ghost\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"ghost\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Button with no background or outline\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"loading\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Loading button\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"showWeekNumbers\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"show-week-numbers\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"since\",\n                            \"text\": \"3.0.0\"\n                        }],\n                    \"text\": \"Shows week numbers displayed on the left side of the date picker\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"customRangeAllowed\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"custom-range-allowed\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Controls whether the user is allowed to pick custom date ranges in the component.\\nWhen set to 'true', the user can select a custom date range using the date picker.\\nWhen set to 'false', only predefined time date ranges are available for selection.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"dateRangeOptions\": {\n                \"type\": \"unknown\",\n                \"attribute\": \"date-range-options\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DateDropdownOption[]\",\n                    \"resolved\": \"DateDropdownOption[]\",\n                    \"references\": {\n                        \"DateDropdownOption\": {\n                            \"location\": \"local\",\n                            \"path\": \"/home/runner/work/ix/ix/packages/core/src/components/date-dropdown/date-dropdown.tsx\",\n                            \"id\": \"src/components/date-dropdown/date-dropdown.tsx::DateDropdownOption\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of predefined date range options for the date picker.\\nEach option is an object with a label describing the range and a function\\nthat returns the start and end dates of the range as a DateRangeOption object.\\n\\nExample format:\\n  {\\n    id: 'some unique id',\\n    label: 'Name of the range',\\n    from: undefined, to: '2023/03/29'\\n  },\\n  // ... other predefined date range options ...\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"defaultValue\": \"[]\"\n            },\n            \"locale\": {\n                \"type\": \"string\",\n                \"attribute\": \"locale\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Locale identifier (e.g. 'en' or 'de').\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"weekStartIndex\": {\n                \"type\": \"number\",\n                \"attribute\": \"week-start-index\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The index of which day to start the week on, based on the Locale#weekdays array.\\nE.g. if the locale is en-us, weekStartIndex = 1 results in starting the week on monday.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"0\"\n            },\n            \"i18nCustomItem\": {\n                \"type\": \"string\",\n                \"attribute\": \"i18n-custom-item\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Text for custom dropdown item. Will be used for translation.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Custom...'\"\n            },\n            \"i18nDone\": {\n                \"type\": \"string\",\n                \"attribute\": \"i18n-done\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Text for the done button. Will be used for translation.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'Done'\"\n            },\n            \"i18nNoRange\": {\n                \"type\": \"string\",\n                \"attribute\": \"i18n-no-range\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Text for the done button. Will be used for translation.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'No range set'\"\n            },\n            \"today\": {\n                \"type\": \"string\",\n                \"attribute\": \"today\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"DateTime.now().toISO()\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"selectedDateRangeId\": {},\n            \"currentRangeValue\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"dateRangeChange\",\n                \"name\": \"dateRangeChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"EventEmitter for date range change events.\\n\\nThis event is emitted when the date range changes within the component.\\nThe event payload contains information about the selected date range.\"\n                },\n                \"complexType\": {\n                    \"original\": \"DateRangeChangeEvent\",\n                    \"resolved\": \"{ id: string; from?: string | undefined; to?: string | undefined; }\",\n                    \"references\": {\n                        \"DateRangeChangeEvent\": {\n                            \"location\": \"local\",\n                            \"path\": \"/home/runner/work/ix/ix/packages/core/src/components/date-dropdown/date-dropdown.tsx\",\n                            \"id\": \"src/components/date-dropdown/date-dropdown.tsx::DateRangeChangeEvent\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getDateRange\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<DateRangeChangeEvent>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"DateRangeChangeEvent\": {\n                            \"location\": \"local\",\n                            \"path\": \"/home/runner/work/ix/ix/packages/core/src/components/date-dropdown/date-dropdown.tsx\",\n                            \"id\": \"src/components/date-dropdown/date-dropdown.tsx::DateRangeChangeEvent\"\n                        }\n                    },\n                    \"return\": \"Promise<DateRangeChangeEvent>\"\n                },\n                \"docs\": {\n                    \"text\": \"Retrieves the currently selected date range from the component.\\nThis method returns the selected date range as a `DateChangeEvent` object.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"hostElement\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"dateRangeId\",\n                \"methodName\": \"onDateRangeIdChange\"\n            }, {\n                \"propName\": \"to\",\n                \"methodName\": \"onDateRangeIdChange\"\n            }, {\n                \"propName\": \"from\",\n                \"methodName\": \"onDateRangeIdChange\"\n            }, {\n                \"propName\": \"dateRangeOptions\",\n                \"methodName\": \"onDateRangeOptionsChange\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"onDisabledChange\"\n            }];\n    }\n}\n//# sourceMappingURL=date-dropdown.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}