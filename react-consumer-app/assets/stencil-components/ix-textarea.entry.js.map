{"version":3,"file":"ix-textarea.entry.js","sources":["node_modules/@siemens/ix/dist/collection/components/input/textarea.css?tag=ix-textarea&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/input/textarea.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2025 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\ninput {\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  font-family: Siemens Sans, Siemens Sans, Arial, Helvetica, sans-serif;\n  font-style: normal;\n  font-size: var(--theme-ms-0);\n  line-height: var(--theme-line-height-md);\n  font-weight: var(--theme-font-weight-normal);\n  letter-spacing: var(--theme-letter-spacing-xl);\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smooting: grayscale;\n  min-height: 2rem;\n  width: auto;\n  padding: 0.25rem 0.5rem;\n  background-color: var(--theme-input--background);\n  color: var(--theme-input--color);\n  -webkit-appearance: textfield;\n     -moz-appearance: textfield;\n          appearance: textfield;\n  text-overflow: ellipsis;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color);\n  border-radius: var(--theme-input--border-radius);\n  box-shadow: var(--theme-input--box-shadow);\n}\ninput[type=number] {\n  text-align: right;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  margin-right: -2px;\n  margin-left: 2px;\n  display: none;\n}\ninput:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ninput:-webkit-autofill, input:autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ninput::-moz-placeholder {\n  color: var(--theme-input-hint--color);\n}\ninput::placeholder {\n  color: var(--theme-input-hint--color);\n}\ninput.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), input:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ninput.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), input:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ninput.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), input:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ninput.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), input:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ninput:-moz-read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ninput.read-only, input:read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ninput.read-only::-moz-placeholder, input:read-only::-moz-placeholder {\n  color: transparent;\n}\ninput:-moz-read-only::placeholder {\n  color: transparent;\n}\ninput.read-only::placeholder, input:read-only::placeholder {\n  color: transparent;\n}\ninput:disabled, input.disabled {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  color: var(--theme-input--color--disabled);\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--disabled);\n}\ninput:disabled::-moz-placeholder, input.disabled::-moz-placeholder {\n  color: transparent;\n}\ninput:disabled::placeholder, input.disabled::placeholder {\n  color: transparent;\n}\n\ntextarea {\n  font-feature-settings: \"clig\" off, \"liga\" off;\n  font-family: Siemens Sans, Siemens Sans, Arial, Helvetica, sans-serif;\n  font-style: normal;\n  font-size: var(--theme-ms-0);\n  line-height: var(--theme-line-height-md);\n  font-weight: var(--theme-font-weight-normal);\n  letter-spacing: var(--theme-letter-spacing-xl);\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smooting: grayscale;\n  min-height: 2rem;\n  width: auto;\n  padding: 0.25rem 0.5rem;\n  background-color: var(--theme-input--background);\n  color: var(--theme-input--color);\n  -webkit-appearance: textfield;\n     -moz-appearance: textfield;\n          appearance: textfield;\n  text-overflow: ellipsis;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color);\n  border-radius: var(--theme-input--border-radius);\n  box-shadow: var(--theme-input--box-shadow);\n}\ntextarea[type=number] {\n  text-align: right;\n}\ntextarea[type=number]::-webkit-inner-spin-button {\n  margin-right: -2px;\n  margin-left: 2px;\n  display: none;\n}\ntextarea:-webkit-autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ntextarea:-webkit-autofill, textarea:autofill {\n  -webkit-box-shadow: 0 0 0 1000px var(--theme-color-component-info) inset !important;\n  -webkit-text-fill-color: var(--theme-input--color--autofill) !important;\n  background-color: var(--theme-input--background--autofill) !important;\n  border: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color--autofill) !important;\n  color: var(--theme-input--color--autofill) !important;\n}\ntextarea::-moz-placeholder {\n  color: var(--theme-input-hint--color);\n}\ntextarea::placeholder {\n  color: var(--theme-input-hint--color);\n}\ntextarea.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), textarea:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ntextarea.hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), textarea:hover:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  border-color: var(--theme-input--border-color--hover) !important;\n  background-color: var(--theme-input--background--hover);\n}\ntextarea.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only), textarea:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:-moz-read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ntextarea.focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only), textarea:focus:not(.readonly,\n.read-only,\n.disabled,\n[readonly],\n[disabled],\n:read-only) {\n  outline: 1px solid var(--theme-color-focus-bdr);\n  outline-offset: var(--theme-input--focus--outline-offset);\n  border-color: var(--theme-input--border-color--focus) !important;\n}\ntextarea:-moz-read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ntextarea.read-only, textarea:read-only {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--readonly);\n}\ntextarea.read-only::-moz-placeholder, textarea:read-only::-moz-placeholder {\n  color: transparent;\n}\ntextarea:-moz-read-only::placeholder {\n  color: transparent;\n}\ntextarea.read-only::placeholder, textarea:read-only::placeholder {\n  color: transparent;\n}\ntextarea:disabled, textarea.disabled {\n  box-shadow: none;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  color: var(--theme-input--color--disabled);\n  border-bottom: var(--theme-input--border-thickness, 1px) solid var(--theme-input--border-color-bottom--disabled);\n}\ntextarea:disabled::-moz-placeholder, textarea.disabled::-moz-placeholder {\n  color: transparent;\n}\ntextarea:disabled::placeholder, textarea.disabled::placeholder {\n  color: transparent;\n}\ntextarea {\n  min-height: 2rem;\n  height: 3.25rem;\n  padding: calc(0.375rem - var(--theme-input--border-thickness)) calc(0.5rem - var(--theme-input--border-thickness));\n}\n\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]),\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]) {\n  border-color: var(--theme-input--border-color--info);\n}\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]):hover,\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--info--hover) !important;\n}\ntextarea.ix-info:not(.disabled):not(:disabled):not([disabled]):active,\ninput.ix-info:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--info--active) !important;\n}\n\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]),\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]) {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]):hover,\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\ntextarea.ix-warning:not(.disabled):not(:disabled):not([disabled]):active,\ninput.ix-warning:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]),\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]) {\n  background-color: var(--theme-input--background--invalid);\n  border-color: var(--theme-input--border-color--invalid) !important;\n}\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):hover,\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):hover {\n  border-color: var(--theme-input--border-color--invalid--hover) !important;\n}\ntextarea[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):active,\ninput[class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled]):active {\n  border-color: var(--theme-input--border-color--invalid--active) !important;\n}\n\n:host {\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n  display: inline-block;\n  position: relative;\n  width: auto;\n}\n:host *,\n:host *::after,\n:host *::before {\n  box-sizing: border-box;\n}\n:host ::-webkit-scrollbar-button {\n  display: none;\n}\n@-moz-document url-prefix() {\n  :host * {\n    scrollbar-color: var(--theme-scrollbar-thumb--background) var(--theme-scrollbar-track--background);\n    scrollbar-width: thin;\n  }\n}\n:host ::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n:host ::-webkit-scrollbar-track {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-track--background);\n}\n:host ::-webkit-scrollbar-track:hover {\n  background: var(--theme-scrollbar-track--background--hover);\n}\n:host ::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: var(--theme-scrollbar-thumb--background);\n}\n:host ::-webkit-scrollbar-thumb:hover {\n  background: var(--theme-scrollbar-thumb--background--hover);\n}\n:host ::-webkit-scrollbar-corner {\n  display: none;\n}\n:host .input-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n:host input {\n  width: 100%;\n  height: 100%;\n}\n:host .start-container,\n:host .end-container {\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n}\n:host .start-container {\n  left: 0;\n}\n:host .end-container {\n  right: 0;\n}\n:host .start-container ::slotted(*) {\n  margin-left: 0.5rem;\n}\n:host .start-container ::slotted(ix-icon.size-24),\n:host .start-container ::slotted(ix-icon-button.btn-icon-16) {\n  margin-left: 0.25rem;\n}\n:host .start-container ::slotted(ix-icon-button.btn-icon-32) {\n  margin-left: 0;\n}\n:host .end-container ::slotted(*) {\n  margin-right: 0.5rem;\n}\n:host .end-container ::slotted(ix-icon.size-24),\n:host .end-container ::slotted(ix-icon-button.btn-icon-16) {\n  margin-right: 0.25rem;\n}\n:host .end-container ::slotted(ix-icon-button.btn-icon-32) {\n  margin-right: 0;\n}\n:host .bottom-text {\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n:host(.disabled) input,\n:host(.disabled) textarea {\n  pointer-events: none;\n}\n\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input {\n  border-color: var(--theme-input--border-color--info);\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--info--hover) !important;\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--info--active) !important;\n}\n\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input {\n  background-color: var(--theme-input--background--invalid);\n  border-color: var(--theme-input--border-color--invalid) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input:hover,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input:hover {\n  border-color: var(--theme-input--border-color--invalid--hover) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) input:active,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) input:active {\n  border-color: var(--theme-input--border-color--invalid--active) !important;\n}\n\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) textarea {\n  border-color: var(--theme-input--border-color--info);\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) textarea:hover {\n  border-color: var(--theme-input--border-color--info--hover) !important;\n}\n:host(.ix-info:not(.disabled):not(:disabled):not([disabled])) textarea:active {\n  border-color: var(--theme-input--border-color--info--active) !important;\n}\n\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) textarea {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) textarea:hover {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n:host(.ix-warning:not(.disabled):not(:disabled):not([disabled])) textarea:active {\n  border-color: var(--theme-input--border-color--warning--active) !important;\n}\n\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) textarea,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) textarea {\n  background-color: var(--theme-input--background--invalid);\n  border-color: var(--theme-input--border-color--invalid) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) textarea:hover,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) textarea:hover {\n  border-color: var(--theme-input--border-color--invalid--hover) !important;\n}\n:host([class*=ix-invalid]:not(.disabled):not(:disabled):not([disabled])) textarea:active,\n:host(.ix-invalid--required:not(.disabled):not(:disabled):not([disabled])) textarea:active {\n  border-color: var(--theme-input--border-color--invalid--active) !important;\n}","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Host, h, } from \"@stencil/core\";\nimport { HookValidationLifecycle, } from \"../utils/input\";\nimport { makeRef } from \"../utils/make-ref\";\nimport { TextareaElement } from \"./input.fc\";\nimport { mapValidationResult, onInputBlur } from \"./input.util\";\n/**\n * @form-ready\n */\nexport class Textarea {\n    constructor() {\n        /**\n         * The value of the textarea field.\n         */\n        this.value = '';\n        /**\n         * Determines if the textarea field is required.\n         */\n        this.required = false;\n        /**\n         * Determines if the textarea field is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Determines if the textarea field is readonly.\n         */\n        this.readonly = false;\n        /**\n         * Determines the resize behavior of the textarea field.\n         * Resizing can be enabled in one direction, both directions or completely disabled.\n         */\n        this.resizeBehavior = 'both';\n        this.isInvalid = false;\n        this.isValid = false;\n        this.isInfo = false;\n        this.isWarning = false;\n        this.isInvalidByRequired = false;\n        this.textAreaRef = makeRef();\n        this.touched = false;\n    }\n    updateClassMappings(result) {\n        mapValidationResult(this, result);\n    }\n    componentWillLoad() {\n        this.updateFormInternalValue(this.value);\n    }\n    updateFormInternalValue(value) {\n        this.formInternals.setFormValue(value);\n        this.value = value;\n    }\n    /** @internal */\n    async getAssociatedFormElement() {\n        return this.formInternals.form;\n    }\n    /** @internal */\n    hasValidValue() {\n        return Promise.resolve(!!this.value);\n    }\n    /**\n     * Get the native textarea element.\n     */\n    getNativeInputElement() {\n        return this.textAreaRef.waitForCurrent();\n    }\n    /**\n     * Focuses the input field\n     */\n    async focusInput() {\n        return (await this.getNativeInputElement()).focus();\n    }\n    /**\n     * Check if the textarea field has been touched.\n     * @internal\n     * */\n    isTouched() {\n        return Promise.resolve(this.touched);\n    }\n    render() {\n        return (h(Host, { key: 'bd07b9dd40671c81294de505d64f724d6d644f5d', class: {\n                disabled: this.disabled,\n                readonly: this.readonly,\n            } }, h(\"ix-field-wrapper\", { key: 'fe385ac21943b3ae131d3a47609b7dd5f9027625', required: this.required, label: this.label, helperText: this.helperText, invalidText: this.invalidText, infoText: this.infoText, warningText: this.warningText, validText: this.validText, showTextAsTooltip: this.showTextAsTooltip, isInvalid: this.isInvalid, isValid: this.isValid, isInfo: this.isInfo, isWarning: this.isWarning, controlRef: this.textAreaRef }, !!this.maxLength && this.maxLength > 0 && (h(\"ix-typography\", { key: '8c34ba6618bf10eb43de5037a036bca382252287', class: \"bottom-text\", slot: \"bottom-right\", textColor: \"soft\" }, (this.value || '').length, \"/\", this.maxLength)), h(\"div\", { key: '59c2480f284385187713b31f6346803e2d25fc02', class: \"input-wrapper\" }, h(TextareaElement, { key: '224f8653cd18524d60db225cb8a0efb1c6cf8d37', minLength: this.minLength, maxLength: this.maxLength, textareaCols: this.textareaCols, textareaRows: this.textareaRows, textareaHeight: this.textareaHeight, textareaWidth: this.textareaWidth, resizeBehavior: this.resizeBehavior, readonly: this.readonly, disabled: this.disabled, isInvalid: this.isInvalid, required: this.required, value: this.value, placeholder: this.placeholder, textAreaRef: this.textAreaRef, valueChange: (value) => this.valueChange.emit(value), updateFormInternalValue: (value) => this.updateFormInternalValue(value), onBlur: () => {\n                onInputBlur(this, this.textAreaRef.current);\n                this.touched = true;\n            } })))));\n    }\n    static get is() { return \"ix-textarea\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get formAssociated() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"textarea.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"textarea.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"name\": {\n                \"type\": \"string\",\n                \"attribute\": \"name\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"attribute\": \"placeholder\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The placeholder text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"attribute\": \"value\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true,\n                \"defaultValue\": \"''\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"required\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines if the textarea field is required.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"disabled\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines if the textarea field is disabled.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"readonly\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"readonly\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines if the textarea field is readonly.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"helperText\": {\n                \"type\": \"string\",\n                \"attribute\": \"helper-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The helper text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"infoText\": {\n                \"type\": \"string\",\n                \"attribute\": \"info-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The info text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"showTextAsTooltip\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"show-text-as-tooltip\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines if the text should be displayed as a tooltip.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"validText\": {\n                \"type\": \"string\",\n                \"attribute\": \"valid-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The valid text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"warningText\": {\n                \"type\": \"string\",\n                \"attribute\": \"warning-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The warning text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"attribute\": \"label\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The label for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": true\n            },\n            \"invalidText\": {\n                \"type\": \"string\",\n                \"attribute\": \"invalid-text\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The error text for the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"textareaHeight\": {\n                \"type\": \"string\",\n                \"attribute\": \"textarea-height\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The height of the textarea field (e.g. \\\"52px\\\").\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"textareaWidth\": {\n                \"type\": \"string\",\n                \"attribute\": \"textarea-width\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The width of the textarea field (e.g. \\\"200px\\\").\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"textareaRows\": {\n                \"type\": \"number\",\n                \"attribute\": \"textarea-rows\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The height of the textarea specified by number of rows.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"textareaCols\": {\n                \"type\": \"number\",\n                \"attribute\": \"textarea-cols\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The width of the textarea specified by number of characters.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"resizeBehavior\": {\n                \"type\": \"string\",\n                \"attribute\": \"resize-behavior\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"TextareaResizeBehavior\",\n                    \"resolved\": \"\\\"both\\\" | \\\"horizontal\\\" | \\\"none\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"TextareaResizeBehavior\": {\n                            \"location\": \"local\",\n                            \"path\": \"/home/runner/work/ix/ix/packages/core/src/components/input/textarea.tsx\",\n                            \"id\": \"src/components/input/textarea.tsx::TextareaResizeBehavior\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the resize behavior of the textarea field.\\nResizing can be enabled in one direction, both directions or completely disabled.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false,\n                \"defaultValue\": \"'both'\"\n            },\n            \"maxLength\": {\n                \"type\": \"number\",\n                \"attribute\": \"max-length\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The maximum length of the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"minLength\": {\n                \"type\": \"number\",\n                \"attribute\": \"min-length\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The minimum length of the textarea field.\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isInvalid\": {},\n            \"isValid\": {},\n            \"isInfo\": {},\n            \"isWarning\": {},\n            \"isInvalidByRequired\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"valueChange\",\n                \"name\": \"valueChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the value of the textarea field changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"validityStateChange\",\n                \"name\": \"validityStateChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the validity state of the textarea field changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ValidityState\",\n                    \"resolved\": \"ValidityState\",\n                    \"references\": {\n                        \"ValidityState\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::ValidityState\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ixBlur\",\n                \"name\": \"ixBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Event emitted when the textarea field loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getAssociatedFormElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLFormElement | null>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLFormElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLFormElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLFormElement | null>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"hasValidValue\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getNativeInputElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLTextAreaElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLTextAreaElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLTextAreaElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLTextAreaElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the native textarea element.\",\n                    \"tags\": []\n                }\n            },\n            \"focusInput\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Focuses the input field\",\n                    \"tags\": []\n                }\n            },\n            \"isTouched\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Check if the textarea field has been touched.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"hostElement\"; }\n    static get attachInternalsMemberName() { return \"formInternals\"; }\n}\n__decorate([\n    HookValidationLifecycle()\n], Textarea.prototype, \"updateClassMappings\", null);\n//# sourceMappingURL=textarea.js.map\n"],"names":["this"],"mappings":"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","x_google_ignoreList":[0,1]}