{"version":3,"file":"ix-tree.entry.js","sources":["node_modules/@siemens/ix/dist/collection/components/utils/lazy-list/lazy.js","node_modules/@siemens/ix/dist/collection/components/tree-item/default-tree-item.js","node_modules/@siemens/ix/dist/collection/components/tree/tree.css?tag=ix-tree&encapsulation=shadow","node_modules/@siemens/ix/dist/collection/components/tree/tree.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Manually forked from https://github.com/tbranyen/hyperlist to remove\n// features a direct document calls\n//\n// Hyperlist is licensed MIT. https://github.com/tbranyen/hyperlist\nconst isNumber = (input) => !Number.isNaN(Number(input));\nconst addClass = (element, className) => {\n    element.classList.add(className);\n};\nexport class VirtualList {\n    static create(element, userProvidedConfig = VirtualList.defaultConfig) {\n        return new VirtualList(element, userProvidedConfig);\n    }\n    static mergeStyle(element, style) {\n        for (let i in style) {\n            if (element.style[i] !== style[i]) {\n                element.style[i] = style[i];\n            }\n        }\n    }\n    static getMaxBrowserHeight() {\n        // Create two elements, the wrapper is `1px` tall and is transparent and\n        // positioned at the top of the page. Inside that is an element that gets\n        // set to 1 billion pixels. Then reads the max height the browser can\n        // calculate.\n        const wrapper = document.createElement('div');\n        const fixture = document.createElement('div');\n        // As said above, these values get set to put the fixture elements into the\n        // right visual state.\n        VirtualList.mergeStyle(wrapper, {\n            position: 'absolute',\n            height: '1px',\n            opacity: 0,\n        });\n        VirtualList.mergeStyle(fixture, { height: '1e7px' });\n        // Add the fixture into the wrapper element.\n        wrapper.appendChild(fixture);\n        // Apply to the page, the values won't kick in unless this is attached.\n        document.body.appendChild(wrapper);\n        // Get the maximum element height in pixels.\n        const maxElementHeight = fixture.offsetHeight;\n        // Remove the element immediately after reading the value.\n        document.body.removeChild(wrapper);\n        return maxElementHeight;\n    }\n    constructor(element, userProvidedConfig) {\n        this._lastRepaint = null;\n        this._maxElementHeight = VirtualList.getMaxBrowserHeight();\n        this.refresh(element, userProvidedConfig);\n        const config = this._config;\n        // Create internal render loop.\n        const render = () => {\n            const scrollTop = this._getScrollPosition();\n            const lastRepaint = this._lastRepaint;\n            this._renderAnimationFrame = window.requestAnimationFrame(render);\n            if (scrollTop === lastRepaint) {\n                return;\n            }\n            const diff = lastRepaint ? scrollTop - lastRepaint : 0;\n            if (!lastRepaint || diff < 0 || diff > this._averageHeight) {\n                let rendered = this._renderChunk();\n                this._lastRepaint = scrollTop;\n                if (rendered !== false && typeof config.afterRender === 'function') {\n                    config.afterRender();\n                }\n            }\n        };\n        render();\n    }\n    destroy() {\n        window.cancelAnimationFrame(this._renderAnimationFrame);\n    }\n    refresh(element, userProvidedConfig = VirtualList.defaultConfig) {\n        this._config = userProvidedConfig;\n        if (!element || element.nodeType !== 1) {\n            throw new Error('HyperList requires a valid DOM Node container');\n        }\n        this._element = element;\n        const config = this._config;\n        const scroller = this._scroller ||\n            config.scroller ||\n            document.createElement(config.scrollerTagName || 'tr');\n        // Default configuration option `useFragment` to `true`.\n        if (typeof config.useFragment !== 'boolean') {\n            this._config.useFragment = true;\n        }\n        if (!config.generate) {\n            throw new Error('Missing required `generate` function');\n        }\n        if (!isNumber(config.total)) {\n            throw new Error('Invalid required `total` value, expected number');\n        }\n        if (!Array.isArray(config.itemHeight) && !isNumber(config.itemHeight)) {\n            throw new Error(`\n        Invalid required \\`itemHeight\\` value, expected number or array\n      `.trim());\n        }\n        else if (isNumber(config.itemHeight)) {\n            this._itemHeights = Array(config.total).fill(config.itemHeight);\n        }\n        else {\n            this._itemHeights = [config.itemHeight];\n        }\n        // Width and height should be coerced to string representations. Either in\n        // `%` or `px`.\n        Object.keys(VirtualList.defaultConfig)\n            .filter((prop) => prop in config)\n            .forEach((prop) => {\n            const value = config[prop];\n            const isValueNumber = isNumber(value);\n            if (value && typeof value !== 'string' && typeof value !== 'number') {\n                let msg = `Invalid optional \\`${prop}\\`, expected string or number`;\n                throw new Error(msg);\n            }\n            else if (isValueNumber) {\n                config[prop] = `${value}px`;\n            }\n        });\n        const isHorizontal = Boolean(config.horizontal);\n        const value = config[isHorizontal ? 'width' : 'height'];\n        if (value) {\n            const isValueNumber = isNumber(value);\n            const isValuePercent = isValueNumber ? false : value.slice(-1) === '%';\n            // Compute the containerHeight as number\n            const numberValue = isValueNumber\n                ? parseInt(value, 10)\n                : parseInt(value.replace(/px|%/, ''), 10);\n            const innerSize = window[isHorizontal ? 'innerWidth' : 'innerHeight'];\n            if (isValuePercent) {\n                this._containerSize = (innerSize * numberValue) / 100;\n            }\n            else {\n                this._containerSize = isNumber(value) ? value : numberValue;\n            }\n        }\n        const scrollContainer = config.scrollContainer;\n        const scrollerHeight = config.itemHeight * config.total;\n        const maxElementHeight = this._maxElementHeight;\n        if (scrollerHeight > maxElementHeight) {\n            console.warn([\n                'HyperList: The maximum element height',\n                maxElementHeight + 'px has',\n                'been exceeded; please reduce your item height.',\n            ].join(' '));\n        }\n        // Decorate the container element with styles that will match\n        // the user supplied configuration.\n        const elementStyle = {\n            width: `${config.width}`,\n            height: scrollContainer ? `${scrollerHeight}px` : `${config.height}`,\n            overflow: scrollContainer ? 'none' : 'auto',\n            position: 'relative',\n        };\n        VirtualList.mergeStyle(element, elementStyle);\n        if (scrollContainer) {\n            VirtualList.mergeStyle(config.scrollContainer, { overflow: 'auto' });\n        }\n        const scrollerStyle = {\n            opacity: '0',\n            position: 'absolute',\n            [isHorizontal ? 'height' : 'width']: '1px',\n            [isHorizontal ? 'width' : 'height']: `${scrollerHeight}px`,\n        };\n        VirtualList.mergeStyle(scroller, scrollerStyle);\n        // Only append the scroller element once.\n        if (!this._scroller) {\n            element.appendChild(scroller);\n        }\n        const padding = this._computeScrollPadding();\n        this._scrollPaddingBottom = padding.bottom;\n        this._scrollPaddingTop = padding.top;\n        // Set the scroller instance.\n        this._scroller = scroller;\n        this._scrollHeight = this._computeScrollHeight();\n        // Reuse the item positions if refreshed, otherwise set to empty array.\n        this._itemPositions = this._itemPositions || Array(config.total).fill(0);\n        // Each index in the array should represent the position in the DOM.\n        this._computePositions(0);\n        // Render after refreshing. Force render if we're calling refresh manually.\n        this._renderChunk(this._lastRepaint !== null);\n        if (typeof config.afterRender === 'function') {\n            config.afterRender();\n        }\n    }\n    _getRow(i) {\n        const config = this._config;\n        let item = config.generate(i);\n        let height = item.height;\n        if (height !== undefined && isNumber(height)) {\n            item = item.element;\n            // The height isn't the same as predicted, compute positions again\n            if (height !== this._itemHeights[i]) {\n                this._itemHeights[i] = height;\n                this._computePositions(i);\n                this._scrollHeight = this._computeScrollHeight();\n            }\n        }\n        else {\n            height = this._itemHeights[i];\n        }\n        if (!item || item.nodeType !== 1) {\n            throw new Error(`Generator did not return a DOM Node for index: ${i}`);\n        }\n        addClass(item, config.rowClassName || 'vrow');\n        const top = this._itemPositions[i] + this._scrollPaddingTop;\n        VirtualList.mergeStyle(item, {\n            position: 'absolute',\n            [config.horizontal ? 'left' : 'top']: `${top}px`,\n        });\n        return item;\n    }\n    _getScrollPosition() {\n        const config = this._config;\n        if (typeof config.overrideScrollPosition === 'function') {\n            return config.overrideScrollPosition();\n        }\n        return this._element[config.horizontal ? 'scrollLeft' : 'scrollTop'];\n    }\n    _renderChunk(force = false) {\n        const config = this._config;\n        const element = this._element;\n        const scrollTop = this._getScrollPosition();\n        const total = config.total;\n        let from = this._getFrom(scrollTop) - 1;\n        if (from < 0 || from - this._screenItemsLen < 0) {\n            from = 0;\n        }\n        if (!force && this._lastFrom === from) {\n            return false;\n        }\n        this._lastFrom = from;\n        let to = from + this._cachedItemsLen;\n        if (to > total || to + this._cachedItemsLen > total) {\n            to = total;\n        }\n        // Append all the new rows in a document fragment that we will later append\n        // to the parent node\n        const fragment = config.useFragment\n            ? document.createDocumentFragment()\n            : [\n            // Sometimes you'll pass fake elements to this tool and Fragments require\n            // real elements.\n            ];\n        // The element that forces the container to scroll.\n        const scroller = this._scroller;\n        // Keep the scroller in the list of children.\n        fragment[config.useFragment ? 'appendChild' : 'push'](scroller);\n        for (let i = from; i < to; i++) {\n            let row = this._getRow(i);\n            fragment[config.useFragment ? 'appendChild' : 'push'](row);\n        }\n        if (config.applyPatch) {\n            return config.applyPatch(element, fragment);\n        }\n        element.innerHTML = '';\n        element.appendChild(fragment);\n    }\n    _computePositions(from = 1) {\n        const config = this._config;\n        const total = config.total;\n        if (from < 1) {\n            from = 1;\n        }\n        for (let i = from; i < total; i++) {\n            this._itemPositions[i] =\n                this._itemHeights[i - 1] + this._itemPositions[i - 1];\n        }\n    }\n    _computeScrollHeight() {\n        const config = this._config;\n        const isHorizontal = Boolean(config.horizontal);\n        const total = config.total;\n        const scrollHeight = this._itemHeights.reduce((a, b) => a + b, 0) +\n            this._scrollPaddingBottom +\n            this._scrollPaddingTop;\n        VirtualList.mergeStyle(this._scroller, {\n            opacity: 0,\n            position: 'absolute',\n            top: '0px',\n            [isHorizontal ? 'height' : 'width']: '1px',\n            [isHorizontal ? 'width' : 'height']: `${scrollHeight}px`,\n        });\n        // Calculate the height median\n        const sortedItemHeights = this._itemHeights.slice(0).sort((a, b) => a - b);\n        const middle = Math.floor(total / 2);\n        const averageHeight = total % 2 === 0\n            ? (sortedItemHeights[middle] + sortedItemHeights[middle - 1]) / 2\n            : sortedItemHeights[middle];\n        const clientProp = isHorizontal ? 'clientWidth' : 'clientHeight';\n        const element = config.scrollContainer\n            ? config.scrollContainer\n            : this._element;\n        const containerHeight = element[clientProp]\n            ? element[clientProp]\n            : this._containerSize;\n        this._screenItemsLen = Math.ceil(containerHeight / averageHeight);\n        this._containerSize = containerHeight;\n        // Cache 3 times the number of items that fit in the container viewport.\n        this._cachedItemsLen = Math.max(this._cachedItemsLen || 0, this._screenItemsLen * 3);\n        this._averageHeight = averageHeight;\n        return scrollHeight;\n    }\n    _computeScrollPadding() {\n        const config = this._config;\n        const isHoriz = Boolean(config.horizontal);\n        const styles = window.getComputedStyle(this._element);\n        const padding = (location) => {\n            const cssValue = styles.getPropertyValue(`padding-${location}`);\n            return parseInt(cssValue, 10) || 0;\n        };\n        if (isHoriz) {\n            return {\n                bottom: padding('right'),\n                top: padding('left'),\n            };\n        }\n        else {\n            return {\n                bottom: padding('bottom'),\n                top: padding('top'),\n            };\n        }\n    }\n    _getFrom(scrollTop) {\n        let i = 0;\n        while (this._itemPositions[i] < scrollTop) {\n            i++;\n        }\n        return i;\n    }\n}\nVirtualList.defaultConfig = {\n    width: '100%',\n    height: '100%',\n};\n//# sourceMappingURL=lazy.js.map\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function renderDefaultItem(item, context, update) {\n    const el = document.createElement('ix-tree-item');\n    el.hasChildren = item.hasChildren;\n    el.context = context;\n    el.text = item.data.name;\n    update((updateTreeItem) => {\n        el.text = updateTreeItem.data.name;\n    });\n    return el;\n}\n//# sourceMappingURL=default-tree-item.js.map\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: block;\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { VirtualList } from \"./../utils/lazy-list\";\nimport { renderDefaultItem } from \"../tree-item/default-tree-item\";\nimport { dropdownController } from \"../dropdown/dropdown-controller\";\nexport class Tree {\n    constructor() {\n        /**\n         * Tree model\n         */\n        this.model = {};\n        /**\n         * Selection and collapsed state management\n         */\n        this.context = {};\n        this.updates = new Map();\n        this.hasFirstRender = false;\n    }\n    updatePadding(element, item) {\n        element.style.paddingLeft = item.level + 'rem';\n    }\n    getVirtualizerOptions() {\n        const list = this.buildTreeList(this.model[this.root]);\n        return {\n            width: '100%',\n            height: '100%',\n            itemHeight: 32,\n            total: list.length,\n            generate: (index) => {\n                const item = list[index];\n                const renderedTreeItem = this.hostElement.querySelector(`[data-tree-node-id=\"${item.id}\"]`);\n                const context = this.getContext(item.id);\n                if (renderedTreeItem) {\n                    renderedTreeItem.hasChildren = item.hasChildren;\n                    renderedTreeItem.context = Object.assign({}, context);\n                    if (this.updates.has(item.id)) {\n                        const doUpdate = this.updates.get(item.id);\n                        if (doUpdate) {\n                            doUpdate(item, Object.assign({}, this.context));\n                        }\n                    }\n                    this.updatePadding(renderedTreeItem, item);\n                    return renderedTreeItem;\n                }\n                const update = (callback) => {\n                    this.updates.set(item.id, callback);\n                };\n                let innerElement = null;\n                if (this.renderItem) {\n                    innerElement = this.renderItem(index, item, list, Object.assign({}, this.context), update);\n                }\n                if (innerElement === null) {\n                    innerElement = renderDefaultItem(item, context, update);\n                }\n                const el = innerElement;\n                el.setAttribute('data-tree-node-id', item.id);\n                el.style.paddingRight = '1rem';\n                this.updatePadding(el, item);\n                return el;\n            },\n        };\n    }\n    setContext(id, context) {\n        this.context = Object.assign(Object.assign({}, this.context), { [id]: context });\n        this.contextChange.emit(this.context);\n    }\n    getContext(id) {\n        if (!this.context) {\n            return {\n                isExpanded: false,\n                isSelected: false,\n            };\n        }\n        if (!this.context[id]) {\n            this.context[id] = {\n                isExpanded: false,\n                isSelected: false,\n            };\n        }\n        return this.context[id];\n    }\n    buildTreeList(root, level = 0) {\n        const itemList = [];\n        if (root === null || root === void 0 ? void 0 : root.hasChildren) {\n            const newLevel = level + 1;\n            root.children.forEach((id) => {\n                const item = this.model[id];\n                const context = this.getContext(id);\n                itemList.push(Object.assign(Object.assign({}, item), { level }));\n                if (item.hasChildren && context.isExpanded) {\n                    itemList.push(...this.buildTreeList(item, newLevel));\n                }\n            });\n        }\n        return itemList;\n    }\n    componentDidLoad() {\n        this.initList();\n        this.observer = new MutationObserver((records) => {\n            let removed = [];\n            records.forEach((record) => {\n                removed = [...removed, ...Array.from(record.removedNodes)];\n                record.addedNodes.forEach((an) => {\n                    const index = removed.indexOf(an);\n                    if (index >= 0) {\n                        removed.splice(index, 1);\n                    }\n                });\n            });\n            this.nodeRemoved.emit(removed);\n        });\n        this.observer.observe(this.hostElement, {\n            childList: true,\n        });\n    }\n    componentWillRender() {\n        this.hasFirstRender = true;\n        if (this.isListInitialized()) {\n            this.refreshList();\n        }\n        else {\n            this.initList();\n        }\n    }\n    connectedCallback() {\n        if (this.hasFirstRender) {\n            this.initList();\n        }\n    }\n    disconnectedCallback() {\n        var _a, _b;\n        (_a = this.hyperlist) === null || _a === void 0 ? void 0 : _a.destroy();\n        (_b = this.observer) === null || _b === void 0 ? void 0 : _b.disconnect();\n    }\n    modelChange() {\n        if (this.hasFirstRender && !this.isListInitialized()) {\n            this.initList();\n        }\n    }\n    isListInitialized() {\n        var _a;\n        //@ts-ignore\n        const itemPositions = (_a = this.hyperlist) === null || _a === void 0 ? void 0 : _a._itemPositions;\n        return (itemPositions !== undefined &&\n            itemPositions.length &&\n            !(itemPositions === null || itemPositions === void 0 ? void 0 : itemPositions.some((item) => item === undefined || Number.isNaN(item))));\n    }\n    refreshList() {\n        if (this.hyperlist) {\n            this.hyperlist.refresh(this.hostElement, this.getVirtualizerOptions());\n        }\n    }\n    initList() {\n        var _a;\n        if (!this.model) {\n            return;\n        }\n        (_a = this.hyperlist) === null || _a === void 0 ? void 0 : _a.destroy();\n        const config = this.getVirtualizerOptions();\n        this.hyperlist = new VirtualList(this.hostElement, config);\n    }\n    onToggle(event) {\n        const { target } = event;\n        event.preventDefault();\n        event.stopPropagation();\n        if (!(target instanceof HTMLElement)) {\n            return;\n        }\n        const id = target.getAttribute('data-tree-node-id');\n        if (!id) {\n            return;\n        }\n        const item = this.model[id];\n        if (!item.hasChildren) {\n            return;\n        }\n        const context = this.getContext(id);\n        context.isExpanded = !context.isExpanded;\n        this.nodeToggled.emit({ id, isExpanded: context.isExpanded });\n        this.setContext(id, context);\n    }\n    onTreeItemClick(event) {\n        const { target } = event;\n        if (!(target instanceof HTMLElement)) {\n            return;\n        }\n        const id = target.getAttribute('data-tree-node-id');\n        if (!id) {\n            return;\n        }\n        const item = this.model[id];\n        const path = event.composedPath();\n        const treeIndex = path.indexOf(this.hostElement);\n        const treePath = path.slice(0, treeIndex);\n        const hasTrigger = dropdownController.pathIncludesTrigger(treePath);\n        if (hasTrigger) {\n            return;\n        }\n        if (!event.defaultPrevented) {\n            Object.values(this.context).forEach((c) => (c.isSelected = false));\n            const context = this.getContext(id);\n            context.isSelected = true;\n            this.setContext(id, context);\n        }\n        if (this.toggleOnItemClick && item.hasChildren) {\n            const context = this.getContext(id);\n            context.isExpanded = !context.isExpanded;\n            this.nodeToggled.emit({\n                id: id,\n                isExpanded: context.isExpanded,\n            });\n            this.setContext(id, context);\n        }\n        this.nodeClicked.emit(id);\n    }\n    render() {\n        return (h(Host, { key: '334ea5dcb9482db02edbde78d1129e34b4c10988', onClick: (event) => this.onTreeItemClick(event) }, h(\"slot\", { key: '672d437ccefd8e58cef11ac61c166bf3e51369ba' })));\n    }\n    static get is() { return \"ix-tree\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tree.css\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tree.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"root\": {\n                \"type\": \"string\",\n                \"attribute\": \"root\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Initial root element will not be rendered\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            },\n            \"model\": {\n                \"type\": \"unknown\",\n                \"attribute\": \"model\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"TreeModel<any>\",\n                    \"resolved\": \"{ [x: string]: TreeItem<any>; }\",\n                    \"references\": {\n                        \"TreeModel\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tree-model\",\n                            \"id\": \"src/components/tree/tree-model.ts::TreeModel\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Tree model\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"defaultValue\": \"{}\"\n            },\n            \"renderItem\": {\n                \"type\": \"unknown\",\n                \"attribute\": \"render-item\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"<T = any>(\\n    index: number,\\n    data: T,\\n    dataList: Array<T>,\\n    context: TreeContext,\\n    update: (callback: UpdateCallback) => void\\n  ) => HTMLElement\",\n                    \"resolved\": \"(<T = any>(index: number, data: T, dataList: T[], context: TreeContext, update: (callback: UpdateCallback) => void) => HTMLElement) | undefined\",\n                    \"references\": {\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        },\n                        \"Array\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Array\"\n                        },\n                        \"TreeContext\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tree-model\",\n                            \"id\": \"src/components/tree/tree-model.ts::TreeContext\"\n                        },\n                        \"UpdateCallback\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tree-model\",\n                            \"id\": \"src/components/tree/tree-model.ts::UpdateCallback\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Render function of tree items\"\n                },\n                \"getter\": false,\n                \"setter\": false\n            },\n            \"context\": {\n                \"type\": \"unknown\",\n                \"attribute\": \"context\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"TreeContext\",\n                    \"resolved\": \"{ [x: string]: TreeItemContext; }\",\n                    \"references\": {\n                        \"TreeContext\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tree-model\",\n                            \"id\": \"src/components/tree/tree-model.ts::TreeContext\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Selection and collapsed state management\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"defaultValue\": \"{}\"\n            },\n            \"toggleOnItemClick\": {\n                \"type\": \"boolean\",\n                \"attribute\": \"toggle-on-item-click\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"since\",\n                            \"text\": \"3.0.0\"\n                        }],\n                    \"text\": \"Enable to toggle items by click on the item\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"contextChange\",\n                \"name\": \"contextChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Context changed\"\n                },\n                \"complexType\": {\n                    \"original\": \"TreeContext\",\n                    \"resolved\": \"{ [x: string]: TreeItemContext; }\",\n                    \"references\": {\n                        \"TreeContext\": {\n                            \"location\": \"import\",\n                            \"path\": \"./tree-model\",\n                            \"id\": \"src/components/tree/tree-model.ts::TreeContext\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"nodeToggled\",\n                \"name\": \"nodeToggled\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Node toggled event\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ id: string; isExpanded: boolean }\",\n                    \"resolved\": \"{ id: string; isExpanded: boolean; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"nodeClicked\",\n                \"name\": \"nodeClicked\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Node clicked event\"\n                },\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"nodeRemoved\",\n                \"name\": \"nodeRemoved\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emits removed nodes\"\n                },\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"hostElement\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"model\",\n                \"methodName\": \"modelChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"toggle\",\n                \"method\": \"onToggle\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=tree.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2,3]}