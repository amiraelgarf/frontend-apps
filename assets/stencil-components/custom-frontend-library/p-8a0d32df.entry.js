import{r as t,g as e,h as s}from"./p-crweC_lX.js";import{u as i}from"./p-DWm2rkNx.js";const r=":host {\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto');\r\n}\r\n\r\n.chart-wrapper {\r\n  max-width: 100%;\r\n  margin: 20px auto;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n}\r\n\r\n.chart-wrapper > div {\r\n  width: 100%;\r\n  min-height: 300px; \r\n}\r\n";const a=class{constructor(e){t(this,e)}get el(){return e(this)}chartContainer;chart=undefined;chartTitle;chartHeight=350;categories;series;yAxes;colors;componentDidLoad(){this.initializeChart()}componentDidUpdate(t,e,s){const i=s=>{if(Array.isArray(t[s])||typeof t[s]==="object"){return JSON.stringify(t[s])!==JSON.stringify(e[s])}return t[s]!==e[s]};if(this.chart){if((s==="chartTitle"||s==="chartHeight"||s==="categories"||s==="series"||s==="yAxes"||s==="colors")&&i(s)){this.updateChart()}}else if(this.chartContainer&&this.categories&&this.series&&this.yAxes){this.initializeChart()}}initializeChart(){if(this.chartContainer&&this.categories&&this.series&&this.yAxes){if(!this.chart){this.chart=new i(this.chartContainer,this.buildApexOptions());this.chart.render()}}}updateChart(){if(this.chart){this.chart.updateOptions(this.buildApexOptions())}else{this.initializeChart()}}buildApexOptions(){const t=this.yAxes.map((t=>({seriesName:t.seriesName,axisTicks:{show:true},axisBorder:{show:true},title:{text:t.title},opposite:t.opposite||false})));this.series.forEach((e=>{if((e.type==="column"||e.type==="bar")&&!t.some((t=>t.seriesName===e.name))){t.push({seriesName:e.name,show:false})}}));return{chart:{height:this.chartHeight,type:"line",stacked:false,toolbar:{show:false}},title:this.chartTitle?{text:this.chartTitle,align:"center",style:{fontSize:"20px",fontFamily:"Roboto, sans-serif",color:"#333"}}:undefined,dataLabels:{enabled:false},colors:this.colors,series:this.series,stroke:{width:this.series.map((t=>t.type==="line"||t.type==="area"?4:0))},plotOptions:{bar:{columnWidth:"20%"}},xaxis:{categories:this.categories},yaxis:t,tooltip:{shared:false,intersect:true,x:{show:false}},legend:{horizontalAlign:"left",offsetX:40}}}disconnectedCallback(){if(this.chart){this.chart.destroy()}}render(){return s("div",{key:"ae667fa43ee42e16b1d05a351dd3e5cdbe747078",class:"chart-wrapper"},s("div",{key:"6cb9f525259d9421bae28aefaebfaa332b7fe312",ref:t=>this.chartContainer=t}))}};a.style=r;export{a as multi_axis_chart};
//# sourceMappingURL=p-8a0d32df.entry.js.map