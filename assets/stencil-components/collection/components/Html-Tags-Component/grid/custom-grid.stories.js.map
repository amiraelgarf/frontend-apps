{"version":3,"file":"custom-grid.stories.js","sourceRoot":"","sources":["../../../../../src/components/Html-Tags-Component/grid/custom-grid.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { action } from 'storybook/actions';\nimport { useArgs } from 'storybook/preview-api';\n\nimport type { CustomGrid, GridColumn } from './custom-grid';\n\n// Example Data\nconst exampleData = [\n  { id: 1, name: 'Alice Smith', age: 30, city: 'New York', status: 'Active' },\n  { id: 2, name: 'Bob Johnson', age: 24, city: 'Los Angeles', status: 'Inactive' },\n  { id: 3, name: 'Charlie Brown', age: 35, city: 'Chicago', status: 'Active' },\n  { id: 4, name: 'Diana Prince', age: 28, city: 'Miami', status: 'Pending' },\n  { id: 5, name: 'Eve Adams', age: 42, city: 'Houston', status: 'Active' },\n  { id: 6, name: 'Frank White', age: 29, city: 'Seattle', status: 'Inactive' },\n  { id: 7, name: 'Grace Taylor', age: 31, city: 'Boston', status: 'Active' },\n  { id: 8, name: 'Henry Green', age: 22, city: 'Denver', status: 'Pending' },\n  { id: 9, name: 'Ivy King', age: 38, city: 'San Francisco', status: 'Active' },\n  { id: 10, name: 'Jack Lee', age: 27, city: 'Dallas', status: 'Inactive' },\n  { id: 11, name: 'Karen Hall', age: 33, city: 'Atlanta', status: 'Active' },\n  { id: 12, name: 'Liam Scott', age: 26, city: 'Phoenix', status: 'Pending' },\n  { id: 13, name: 'Mia Baker', age: 45, city: 'Philadelphia', status: 'Active' },\n  { id: 14, name: 'Noah Wright', age: 20, city: 'Detroit', status: 'Inactive' },\n  { id: 15, name: 'Olivia Davis', age: 37, city: 'Minneapolis', status: 'Active' },\n];\n\n// Example Columns\nconst defaultColumns: GridColumn[] = [\n  { header: 'ID', field: 'id', width: 80, sortable: true, filterable: true },\n  { header: 'Name', field: 'name', width: 150, sortable: true, filterable: true },\n  { header: 'Age', field: 'age', width: 100, sortable: true, filterable: true },\n  { header: 'City', field: 'city', width: 150, sortable: true, filterable: true },\n  { header: 'Status', field: 'status', width: 120, sortable: true, filterable: true },\n];\n\nconst meta: Meta<CustomGrid> = {\n  title: 'Components/CustomGrid',\n  component: 'custom-grid',\n  tags: ['autodocs'],\n  argTypes: {\n    data: {\n      control: 'object',\n      description: 'The array of data objects to display in the grid.',\n    },\n    columns: {\n      control: 'object',\n      description: 'An array defining grid columns (header, field, width, sortable, filterable, renderCell).',\n    },\n    rowHeight: {\n      control: { type: 'range', min: 30, max: 60, step: 5 },\n      description: 'The height of each row in pixels.',\n    },\n    headerHeight: {\n      control: { type: 'range', min: 30, max: 60, step: 5 },\n      description: 'The height of the header row in pixels.',\n    },\n    striped: {\n      control: 'boolean',\n      description: 'Whether to apply alternating background colors to rows.',\n    },\n    hoverEffect: {\n      control: 'boolean',\n      description: 'Whether to apply a hover effect to rows.',\n    },\n    resizableColumns: {\n      control: 'boolean',\n      description: 'Whether columns can be resized by dragging their borders.',\n    },\n    sortable: {\n      control: 'boolean',\n      description: 'Whether sorting is enabled for the grid (individual columns can override).',\n    },\n    filterable: {\n      control: 'boolean',\n      description: 'Whether filtering is enabled for the grid (individual columns can override).',\n    },\n    pagination: {\n      control: 'boolean',\n      description: 'Whether pagination is enabled for the grid.',\n    },\n    pageSize: {\n      control: { type: 'number', min: 1, max: 20, step: 1 },\n      description: 'The number of rows to display per page when pagination is enabled.',\n    },\n    currentPage: {\n      control: { type: 'number', min: 1, max: 5, step: 1 }, // Max depends on data/pageSize\n      description: 'The current page number (1-indexed) for pagination.',\n    },\n    loading: {\n      control: 'boolean',\n      description: 'Whether the grid is in a loading state.',\n    },\n    emptyMessage: {\n      control: 'text',\n      description: 'Message to display when there is no data.',\n    },\n    columnDefaults: {\n      control: 'object',\n      description: 'Default properties for columns if not specified in individual column definitions.',\n    },\n    gridSortChange: {\n      action: 'gridSortChange',\n      description: \"Event emitted when the grid's sort state changes.\",\n      control: false,\n    },\n    gridFilterChange: {\n      action: 'gridFilterChange',\n      description: \"Event emitted when the grid's filter state changes.\",\n      control: false,\n    },\n    gridPageChange: {\n      action: 'gridPageChange',\n      description: \"Event emitted when the grid's current page changes.\",\n      control: false,\n    },\n    gridRowClick: {\n      action: 'gridRowClick',\n      description: \"Event emitted when a row is clicked.\",\n      control: false,\n    },\n  },\n  render: (args) => {\n    const [_, updateArgs] = useArgs();\n\n    const handleSortChange = (e: CustomEvent<any>) => {\n      action('gridSortChange')(e.detail);\n    };\n\n    const handleFilterChange = (e: CustomEvent<any>) => {\n      action('gridFilterChange')(e.detail);\n    };\n\n    const handlePageChange = (e: CustomEvent<number>) => {\n      action('gridPageChange')(e.detail);\n      updateArgs({ currentPage: e.detail });\n    };\n\n    const handleRowClick = (e: CustomEvent<any>) => {\n      action('gridRowClick')(e.detail);\n    };\n\n    return html`\n      <div style=\"height: 400px; width: 100%;\">\n        <custom-grid\n          .data=${args.data}\n          .columns=${args.columns}\n          row-height=${args.rowHeight}\n          header-height=${args.headerHeight}\n          ?striped=${args.striped}\n          ?hover-effect=${args.hoverEffect}\n          ?resizable-columns=${args.resizableColumns}\n          ?sortable=${args.sortable}\n          ?filterable=${args.filterable}\n          ?pagination=${args.pagination}\n          page-size=${args.pageSize}\n          current-page=${args.currentPage}\n          ?loading=${args.loading}\n          empty-message=${args.emptyMessage}\n          .columnDefaults=${args.columnDefaults}\n          @gridSortChange=${handleSortChange}\n          @gridFilterChange=${handleFilterChange}\n          @gridPageChange=${handlePageChange}\n          @gridRowClick=${handleRowClick}\n        ></custom-grid>\n      </div>\n    `;\n  },\n};\n\nexport default meta;\n\n// --- Stories ---\n\nexport const WithPagination: StoryObj<CustomGrid> = {\n  args: {\n    data: exampleData,\n    columns: defaultColumns,\n    rowHeight: 40,\n    headerHeight: 40,\n    striped: false,\n    hoverEffect: true,\n    resizableColumns: false,\n    sortable: false,\n    filterable: false,\n    loading: false,\n    emptyMessage: 'No data available.',\n    columnDefaults: { sortable: true, filter: 'agTextColumnFilter' },\n    pagination: true,\n    pageSize: 5,\n    currentPage: 1,\n  },\n};\n"]}