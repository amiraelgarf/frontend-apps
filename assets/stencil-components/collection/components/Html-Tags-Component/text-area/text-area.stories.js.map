{"version":3,"file":"text-area.stories.js","sourceRoot":"","sources":["../../../../../src/components/Html-Tags-Component/text-area/text-area.stories.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAIhD,MAAM,IAAI,GAAmB;IAC3B,KAAK,EAAE,qBAAqB;IAC5B,SAAS,EAAE,WAAW;IACtB,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,WAAW,EAAE;YACX,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,uCAAuC;SACrD;QACD,KAAK,EAAE;YACL,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,mCAAmC;SACjD;QACD,WAAW,EAAE;YACX,MAAM,EAAE,mBAAmB;YAC3B,WAAW,EAAE,2CAA2C;YACxD,OAAO,EAAE,KAAK;SACf;KACF;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QACf,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,OAAO,EAAE,CAAC;QAElC,MAAM,iBAAiB,GAAG,CAAC,CAAc,EAAE,EAAE;YAC3C,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAChC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,OAAO,IAAI,CAAA;;uBAEQ,IAAI,CAAC,WAAW;kBACrB,IAAI,CAAC,KAAK;uBACL,iBAAiB;;KAEnC,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAEpB,MAAM,CAAC,MAAM,KAAK,GAAuB;IACvC,IAAI,EAAE;QACJ,WAAW,EAAE,mBAAmB;QAChC,KAAK,EAAE,EAAE;KACV;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAuB;IAC3C,IAAI,EAAE;QACJ,WAAW,EAAE,eAAe;QAC5B,KAAK,EAAE,qBAAqB;KAC7B;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\nimport { action } from 'storybook/actions';\r\nimport { useArgs } from 'storybook/preview-api';\r\n\r\nimport type { TextArea } from './text-area';\r\n\r\nconst meta: Meta<TextArea> = {\r\n  title: 'Components/TextArea',\r\n  component: 'text-area',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'The placeholder text for the textarea',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'The current value of the textarea',\r\n    },\r\n    valueChange: {\r\n      action: 'valueChange event',\r\n      description: 'Emitted when the textarea content changes',\r\n      control: false,\r\n    },\r\n  },\r\n  render: (args) => {\r\n    const [_, updateArgs] = useArgs();\r\n\r\n    const handleValueChange = (e: CustomEvent) => {\r\n      updateArgs({ value: e.detail });\r\n      action('valueChange event')(e.detail);\r\n    };\r\n\r\n    return html`\r\n      <text-area\r\n        placeholder=\"${args.placeholder}\"\r\n        .value=\"${args.value}\"\r\n        @valueChange=${handleValueChange}\r\n      ></text-area>\r\n    `;\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\nexport const Empty: StoryObj<TextArea> = {\r\n  args: {\r\n    placeholder: 'Type something...',\r\n    value: '',\r\n  },\r\n};\r\n\r\nexport const Prefilled: StoryObj<TextArea> = {\r\n  args: {\r\n    placeholder: 'Write here...',\r\n    value: 'Some prefilled text',\r\n  },\r\n};\r\n"]}