{"version":3,"file":"d3-bar-chart.stories.js","sourceRoot":"","sources":["../../../../../src/components/Charts-Component/d3-bar-chart/d3-bar-chart.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html } from 'lit';\r\n\r\ninterface ChartData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface D3BarChartProps {\r\n  chartData: ChartData[];\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst meta: Meta<D3BarChartProps> = {\r\n  title: 'charts/D3 Bar Chart',\r\n  component: 'd3-bar-chart',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    chartData: {\r\n      control: 'object',\r\n      description: 'An array of objects with `name` (string) and `value` (number) for the chart.',\r\n    },\r\n    width: {\r\n      control: 'number',\r\n      description: 'Optional: Fixed width for the chart. If 0, component will try to fill container.',\r\n    },\r\n    height: {\r\n      control: 'number',\r\n      description: 'Optional: Fixed height for the chart. If 0, component will use a default height (400px).',\r\n    },\r\n  },\r\n  render: (args) => {\r\n    return html`\r\n      <d3-bar-chart\r\n        .chartData=${args.chartData}\r\n        width=\"${args.width}\"\r\n        height=\"${args.height}\"\r\n        style=\"height: 400px; width: 600px;\"\r\n      ></d3-bar-chart>\r\n    `;\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\n// --- Stories ---\r\n\r\n// Default Story: A typical bar chart with some data\r\nexport const Default: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'Jan', value: 65 },\r\n      { name: 'Feb', value: 59 },\r\n      { name: 'Mar', value: 80 },\r\n      { name: 'Apr', value: 81 },\r\n      { name: 'May', value: 56 },\r\n      { name: 'Jun', value: 75 },\r\n      { name: 'Jul', value: 90 },\r\n    ],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n\r\n// Story with fewer data points\r\nexport const FewerDataPoints: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'Q1', value: 120 },\r\n      { name: 'Q2', value: 150 },\r\n      { name: 'Q3', value: 90 },\r\n    ],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n\r\n// Story with more data points\r\nexport const MoreDataPoints: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'Item 1', value: 20 },\r\n      { name: 'Item 2', value: 30 },\r\n      { name: 'Item 3', value: 45 },\r\n      { name: 'Item 4', value: 60 },\r\n      { name: 'Item 5', value: 25 },\r\n      { name: 'Item 6', value: 70 },\r\n      { name: 'Item 7', value: 55 },\r\n      { name: 'Item 8', value: 80 },\r\n      { name: 'Item 9', value: 35 },\r\n      { name: 'Item 10', value: 95 },\r\n    ],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n\r\n// Story with fixed dimensions\r\nexport const FixedSize: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'A', value: 10 },\r\n      { name: 'B', value: 25 },\r\n      { name: 'C', value: 15 },\r\n      { name: 'D', value: 40 },\r\n    ],\r\n    width: 500,\r\n    height: 300,\r\n  },\r\n};\r\n\r\n// Story with all values being low\r\nexport const LowValues: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'Low1', value: 5 },\r\n      { name: 'Low2', value: 12 },\r\n      { name: 'Low3', value: 8 },\r\n      { name: 'Low4', value: 15 },\r\n    ],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n\r\n// Story with mixed values\r\nexport const MixedValues: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [\r\n      { name: 'Mix1', value: 10 },\r\n      { name: 'Mix2', value: 90 },\r\n      { name: 'Mix3', value: 30 },\r\n      { name: 'Mix4', value: 75 },\r\n      { name: 'Mix5', value: 50 },\r\n    ],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n\r\n// Story with no data (should display an empty chart)\r\nexport const NoData: StoryObj<D3BarChartProps> = {\r\n  args: {\r\n    chartData: [],\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n};\r\n"]}