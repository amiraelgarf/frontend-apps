{"version":3,"file":"number-input.entry.js","sources":["src/components/Html-Tags-Component/number-input/number-input.css?tag=number-input&encapsulation=shadow","src/components/Html-Tags-Component/number-input/number-input.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  font-family: 'Inter', sans-serif;\r\n}\r\ninput[type='number'] {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  background-color: #fff;\r\n  color: #333;\r\n  font-family: inherit;\r\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n}\r\n\r\ninput[type='number']:focus {\r\n  border-color: #28a745;\r\n  box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);\r\n  outline: none;\r\n}\r\n\r\n","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'number-input',\r\n  styleUrl: 'number-input.css',\r\n  shadow: true,\r\n})\r\nexport class NumberInput {\r\n  @Prop() value: number = 0;\r\n  @Prop() min: number = 0;\r\n  @Prop() max: number = 100;\r\n\r\n  @Event() valueChange: EventEmitter<number> | undefined;\r\n\r\n  handleInput = (event: Event) => {\r\n    const input = event.target as HTMLInputElement;\r\n    this.valueChange?.emit(Number(input.value));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"number\" value={this.value} min={this.min} max={this.max} onInput={this.handleInput} />\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;AAAA,MAAM,cAAc,GAAG,iYAAiY;;MCO3Y,WAAW,GAAA,MAAA;;;;;IACd,KAAK,GAAW,CAAC;IACjB,GAAG,GAAW,CAAC;IACf,GAAG,GAAW,GAAG;AAEhB,IAAA,WAAW;AAEpB,IAAA,WAAW,GAAG,CAAC,KAAY,KAAI;AAC7B,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B;AAC9C,QAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7C,KAAC;IAED,MAAM,GAAA;AACJ,QAAA,QACE,CAAA,CAAA,OAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAA,CAAI;;;;;;;"}