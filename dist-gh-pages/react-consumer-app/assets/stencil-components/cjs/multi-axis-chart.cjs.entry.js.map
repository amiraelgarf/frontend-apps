{"file":"multi-axis-chart.entry.cjs.js","mappings":"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","names":["ApexCharts","h"],"sources":["src/components/Charts-Component/multi-axis-chart/multi-axis-chart.css?tag=multi-axis-chart&encapsulation=shadow","src/components/Charts-Component/multi-axis-chart/multi-axis-chart.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto');\r\n}\r\n\r\n.chart-wrapper {\r\n  max-width: 100%;\r\n  margin: 20px auto;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n}\r\n\r\n.chart-wrapper > div {\r\n  width: 100%;\r\n  min-height: 300px; \r\n}\r\n","import { Component, Prop, h, Element, Watch } from '@stencil/core';\r\nimport ApexCharts, { ApexOptions } from 'apexcharts';\r\n/*\r\n  * decided to break down the Apex option object as the user is not required to know apex charts options and how it works in order to use this library\r\n*/\r\n\r\ntype ApexYAxis = {\r\n  seriesName?: string;\r\n  axisTicks?: { show: boolean };\r\n  axisBorder?: { show: boolean };\r\n  title?: { text: string };\r\n  opposite?: boolean;\r\n  show?: boolean;\r\n};\r\n\r\n\r\nexport interface ChartSeries {\r\n  name: string;\r\n  type: 'line' | 'column' | 'area' | 'bar';\r\n  data: number[];\r\n}\r\n\r\nexport interface ChartYAxis {\r\n  seriesName: string;\r\n  title: string;\r\n  opposite?: boolean;\r\n}\r\n\r\n@Component({\r\n  tag: 'multi-axis-chart',\r\n  styleUrl: 'multi-axis-chart.css',\r\n  shadow: true,\r\n})\r\nexport class MultiAxisChart {\r\n\r\n  @Element() el!: HTMLElement;\r\n\r\n  private chartContainer!: HTMLDivElement;\r\n\r\n  private chart: ApexCharts | undefined = undefined;\r\n\r\n  @Prop() chartTitle?: string;\r\n\r\n  @Prop() chartHeight: number = 350;\r\n\r\n  @Prop() categories!: string[];\r\n\r\n  @Prop() series!: ChartSeries[];\r\n\r\n  @Prop() yAxes!: ChartYAxis[];\r\n\r\n  @Prop() colors?: string[];\r\n\r\n  componentDidLoad() {\r\n    this.initializeChart();\r\n  }\r\n\r\n  componentDidUpdate(newValue: any, oldValue: any, propName: string) {\r\n    const hasChanged = (prop: string) => {\r\n      if (Array.isArray(newValue[prop]) || typeof newValue[prop] === 'object') {\r\n        return JSON.stringify(newValue[prop]) !== JSON.stringify(oldValue[prop]);\r\n      }\r\n      return newValue[prop] !== oldValue[prop];\r\n    };\r\n\r\n    if (this.chart) {\r\n      if (\r\n        (propName === 'chartTitle' ||\r\n          propName === 'chartHeight' ||\r\n          propName === 'categories' ||\r\n          propName === 'series' ||\r\n          propName === 'yAxes' ||\r\n          propName === 'colors') &&\r\n          hasChanged(propName)\r\n      ) {\r\n        this.updateChart();\r\n      }\r\n    } else if (this.chartContainer && this.categories && this.series && this.yAxes) {\r\n      this.initializeChart();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private initializeChart() {\r\n    if (this.chartContainer && this.categories && this.series && this.yAxes) {\r\n      if (!this.chart) {\r\n        this.chart = new ApexCharts(this.chartContainer, this.buildApexOptions());\r\n        this.chart.render();\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateChart() {\r\n    if (this.chart) {\r\n      this.chart.updateOptions(this.buildApexOptions());\r\n    } else {\r\n      this.initializeChart();\r\n    }\r\n  }\r\n\r\n\r\n  private buildApexOptions(): ApexOptions {\r\n    const yaxisConfig: ApexYAxis[] = this.yAxes.map(yAxis => ({\r\n      seriesName: yAxis.seriesName,\r\n      axisTicks: { show: true },\r\n      axisBorder: { show: true },\r\n      title: { text: yAxis.title },\r\n      opposite: yAxis.opposite || false,\r\n    }));\r\n\r\n    this.series.forEach(s => {\r\n      if ((s.type === 'column' || s.type === 'bar') && !yaxisConfig.some(ya => ya.seriesName === s.name)) {\r\n        yaxisConfig.push({\r\n          seriesName: s.name,\r\n          show: false\r\n        });\r\n      }\r\n    });\r\n\r\n    return {\r\n      chart: {\r\n        height: this.chartHeight,\r\n        type: 'line',\r\n        stacked: false,\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      title: this.chartTitle ? {\r\n        text: this.chartTitle,\r\n        align: 'center',\r\n        style: {\r\n          fontSize: '20px',\r\n          fontFamily: 'Roboto, sans-serif',\r\n          color: '#333'\r\n        }\r\n      } : undefined,\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      colors: this.colors,\r\n      series: this.series,\r\n      stroke: {\r\n        width: this.series.map(s => (s.type === 'line' || s.type === 'area') ? 4 : 0),\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: \"20%\"\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: this.categories,\r\n      },\r\n      yaxis: yaxisConfig,\r\n      tooltip: {\r\n        shared: false,\r\n        intersect: true,\r\n        x: { show: false }\r\n      },\r\n      legend: {\r\n        horizontalAlign: \"left\",\r\n        offsetX: 40\r\n      }\r\n    };\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chart-wrapper\">\r\n        <div ref={(el) => (this.chartContainer = el as HTMLDivElement)}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}