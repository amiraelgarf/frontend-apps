{"version":3,"file":"range-input.js","sourceRoot":"","sources":["../../../../../src/components/Html-Tags-Component/range-input/range-input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAgB,CAAC,EAAE,MAAM,eAAe,CAAC;AAOxE,MAAM,OAAO,UAAU;IAIb,IAAI,CAAU;IAKd,KAAK,CAAU;IAKiB,KAAK,GAAW,CAAC,CAAC;IAKlD,GAAG,GAAW,CAAC,CAAC;IAKhB,GAAG,GAAW,GAAG,CAAC;IAKlB,IAAI,GAAW,CAAC,CAAC;IAKjB,QAAQ,GAAY,KAAK,CAAC;IAKzB,QAAQ,CAAmC;IAE5C,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE;QACtC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAClC,MAAM,cAAc,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/E,OAAO,CACL,4DACE,KAAK,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAC1E,KAAK,EAAE,EAAE,mBAAmB,EAAE,GAAG,cAAc,GAAG,EAAE;YAEpD,8DAAO,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC,aAAa;gBAC3C,IAAI,CAAC,KAAK;gBACX,6DAAM,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,KAAK,CAAQ,CACvC;YACR,8DACE,IAAI,EAAC,OAAO,EACZ,EAAE,EAAE,IAAI,CAAC,IAAI,EACb,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAC,aAAa,GACnB,CACE,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'range-input',\r\n  styleUrl: 'range-input.css',\r\n  shadow: true,\r\n})\r\nexport class RangeInput {\r\n  /**\r\n   * The name of the input field.\r\n   */\r\n  @Prop() name!: string;\r\n\r\n  /**\r\n   * The label for the input field.\r\n   */\r\n  @Prop() label!: string;\r\n\r\n  /**\r\n   * The current value of the range input.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) value: number = 0;\r\n\r\n  /**\r\n   * The minimum allowed value.\r\n   */\r\n  @Prop() min: number = 0;\r\n\r\n  /**\r\n   * The maximum allowed value.\r\n   */\r\n  @Prop() max: number = 100;\r\n\r\n  /**\r\n   * The step interval for the range.\r\n   */\r\n  @Prop() step: number = 1;\r\n\r\n  /**\r\n   * Whether the input is disabled.\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  /**\r\n   * Event emitted when the input value changes.\r\n   */\r\n  @Event() myChange: EventEmitter<number> | undefined;\r\n\r\n  private handleChange = (event: Event) => {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const input = event.target as HTMLInputElement;\r\n    this.value = parseFloat(input.value);\r\n    this.myChange?.emit(this.value);\r\n  };\r\n\r\n  render() {\r\n    const range = this.max - this.min;\r\n    const fillPercentage = range > 0 ? ((this.value - this.min) / range) * 100 : 0;\r\n\r\n    return (\r\n      <div\r\n        class={{ 'range-wrapper': true, 'range-wrapper--disabled': this.disabled }}\r\n        style={{ '--fill-percentage': `${fillPercentage}%` }}\r\n      >\r\n        <label htmlFor={this.name} class=\"range-label\">\r\n          {this.label}\r\n          <span class=\"range-value\">{this.value}</span>\r\n        </label>\r\n        <input\r\n          type=\"range\"\r\n          id={this.name}\r\n          name={this.name}\r\n          value={this.value}\r\n          min={this.min}\r\n          max={this.max}\r\n          step={this.step}\r\n          disabled={this.disabled}\r\n          onChange={this.handleChange}\r\n          class=\"range-field\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}