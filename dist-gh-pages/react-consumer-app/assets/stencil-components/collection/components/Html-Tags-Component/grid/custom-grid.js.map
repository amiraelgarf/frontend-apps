{"version":3,"file":"custom-grid.js","sourceRoot":"","sources":["../../../../../src/components/Html-Tags-Component/grid/custom-grid.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Event, EventEmitter, h, Watch, Element } from '@stencil/core';\nimport {\n  Grid,\n  ModuleRegistry,\n  GridOptions,\n  ColDef,\n  ICellRendererParams,\n  ILoadingOverlayComp,\n  INoRowsOverlayComp,\n  createGrid,\n} from '@ag-grid-community/core';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\n\nimport '@ag-grid-community/styles/ag-grid.css';\nimport '@ag-grid-community/styles/ag-theme-alpine.css';\n\nModuleRegistry.registerModules([ClientSideRowModelModule]);\n\nexport interface GridColumn extends ColDef {\n  header: string;\n  field: string;\n  width?: number;\n  sortable?: boolean;\n  filterable?: boolean | string;\n  renderCell?: (params: ICellRendererParams) => any;\n}\n\nclass AgLoadingOverlayComponent implements ILoadingOverlayComp {\n  private eGui!: HTMLElement;\n  init(): void {\n    this.eGui = document.createElement('div');\n    this.eGui.className = 'ag-custom-overlay ag-custom-loading-overlay';\n    this.eGui.innerHTML = 'Loading data...';\n  }\n  getGui(): HTMLElement {\n    return this.eGui;\n  }\n}\n\nclass AgNoRowsOverlayComponent implements INoRowsOverlayComp {\n  private eGui!: HTMLElement;\n  private params: any;\n  init(params: any): void {\n    this.params = params;\n    this.eGui = document.createElement('div');\n    this.eGui.className = 'ag-custom-overlay ag-custom-no-rows-overlay';\n    this.eGui.innerHTML = params.message || 'No data available.';\n  }\n  getGui(): HTMLElement {\n    return this.eGui;\n  }\n}\n\n@Component({\n  tag: 'custom-grid',\n  styleUrl: 'custom-grid.css',\n})\nexport class CustomGrid {\n  @Element() hostElement!: HTMLElement;\n\n  @Prop() data: any[] = [];\n  @Prop() columns: GridColumn[] = [];\n  @Prop() rowHeight: number = 40;\n  @Prop() headerHeight: number = 40;\n  @Prop() striped: boolean = false;\n  @Prop() hoverEffect: boolean = true;\n  @Prop() resizableColumns: boolean = false;\n  @Prop() sortable: boolean = false;\n  @Prop() filterable: boolean = false;\n  @Prop() pagination: boolean = false;\n  @Prop() pageSize: number = 10;\n  @Prop({ mutable: true }) currentPage: number = 1;\n  @Prop() loading: boolean = false;\n  @Prop() emptyMessage: string = 'No data available.';\n  @Prop() columnDefaults: Partial<ColDef> = {\n    sortable: true,\n    filter: 'agTextColumnFilter',\n  };\n\n  @Event() gridSortChange!: EventEmitter<any>;\n  @Event() gridFilterChange!: EventEmitter<any>;\n  @Event() gridPageChange!: EventEmitter<number>;\n  @Event() gridRowClick!: EventEmitter<any>;\n\n  private gridApi: any;\n  private gridDiv!: HTMLDivElement;\n\n  private getFilterType(filterableProp: boolean | string | undefined, globalFilterable: boolean): ColDef['filter'] {\n    if (filterableProp === false) return false;\n    if (typeof filterableProp === 'string') return filterableProp;\n    return (filterableProp || globalFilterable) ? 'agTextColumnFilter' : false;\n  }\n\n  @Watch('loading')\n  onLoadingChange(newValue: boolean) {\n    if (this.gridApi) {\n      newValue ? this.gridApi.showLoadingOverlay() : this.gridApi.hideOverlay();\n    }\n  }\n\n  @Watch('data')\n  onDataChange(newData: any[]) {\n    if (this.gridApi) {\n      this.gridApi.setRowData(newData);\n      if (!newData || newData.length === 0) this.gridApi.showNoRowsOverlay();\n      else this.gridApi.hideOverlay();\n    }\n  }\n\n  @Watch('columns')\n  onColumnsChange(newColumns: GridColumn[]) {\n    if (this.gridApi) {\n      const columnDefs: ColDef[] = newColumns.map(col => {\n        const agColDef: ColDef = {\n          headerName: col.header,\n          field: col.field,\n          width: col.width,\n          resizable: col.resizable,\n          flex: col.flex,\n          minWidth: col.minWidth,\n          maxWidth: col.maxWidth,\n          filter: this.getFilterType(col.filterable, this.filterable),\n          sortable: col.sortable === false ? false : (col.sortable || this.sortable),\n        };\n        if (col.renderCell) {\n          agColDef.cellRenderer = (params: ICellRendererParams) => {\n            const result = col.renderCell!(params);\n            if (result instanceof HTMLElement) return result;\n            if (result && typeof result.outerHTML === 'string') return result.outerHTML;\n            return String(result);\n          };\n        }\n        return agColDef;\n      });\n      this.gridApi.setColumnDefs(columnDefs);\n    }\n  }\n\n  private onGridReady = (params: any) => {\n    this.gridApi = params.api;\n    if (this.loading) this.gridApi.showLoadingOverlay();\n    else if (!this.data || this.data.length === 0) this.gridApi.showNoRowsOverlay();\n\n    if (this.pagination && this.currentPage > 1) {\n      this.gridApi.paginationGoToPage(this.currentPage - 1);\n    }\n  };\n\n  private onSortChanged = (params: any) => {\n    this.gridSortChange.emit(params.api.getSortModel());\n  };\n\n  private onFilterChanged = (params: any) => {\n    this.gridFilterChange.emit(params.api.getFilterModel());\n  };\n\n  private onPaginationChanged = (params: any) => {\n    const newPage = params.api.paginationGetCurrentPage() + 1;\n    if (newPage !== this.currentPage) {\n      this.currentPage = newPage;\n      this.gridPageChange.emit(this.currentPage);\n    }\n  };\n\n  private onRowClicked = (params: any) => {\n    this.gridRowClick.emit(params.data);\n  };\n\n  componentDidLoad() {\n    setTimeout(() => this.initializeGrid(), 0);\n  }\n\n  disconnectedCallback() {\n    if (this.gridApi) {\n      this.gridApi.destroy();\n      this.gridApi = null;\n    }\n  }\n\n  private initializeGrid() {\n    const columnDefs: ColDef[] = this.columns.map(col => {\n      const agColDef: ColDef = {\n        headerName: col.header,\n        field: col.field,\n        width: col.width,\n        resizable: col.resizable,\n        flex: col.flex,\n        minWidth: col.minWidth,\n        maxWidth: col.maxWidth,\n        filter: this.getFilterType(col.filterable, this.filterable),\n        sortable: col.sortable === false ? false : (col.sortable || this.sortable),\n      };\n      if (col.renderCell) {\n        agColDef.cellRenderer = (params: ICellRendererParams) => {\n          const result = col.renderCell!(params);\n          if (result instanceof HTMLElement) return result;\n          if (result && typeof result.outerHTML === 'string') return result.outerHTML;\n          return String(result);\n        };\n      }\n      return agColDef;\n    });\n\n    const cleanedColumnDefaults: Partial<ColDef> = { ...this.columnDefaults };\n    // @ts-ignore\n    if ('filterable' in cleanedColumnDefaults) {\n      cleanedColumnDefaults.filter = this.getFilterType(cleanedColumnDefaults.filterable as boolean | string, this.filterable);\n      delete cleanedColumnDefaults.filterable;\n    }\n\n    const defaultColDef: ColDef = {\n      flex: 1,\n      minWidth: 100,\n      resizable: this.resizableColumns,\n      sortable: this.sortable,\n      filter: this.getFilterType(undefined, this.filterable),\n      ...cleanedColumnDefaults,\n    };\n\n    const standardPageSizes = [10, 20, 50, 100];\n    const paginationPageSizeOptions = this.pagination\n      ? Array.from(new Set([...standardPageSizes, this.pageSize])).sort((a, b) => a - b)\n      : false;\n\n    const gridOptions: GridOptions = {\n      rowData: this.data,\n      columnDefs,\n      rowHeight: this.rowHeight,\n      headerHeight: this.headerHeight,\n      pagination: this.pagination,\n      paginationPageSize: this.pageSize,\n      paginationPageSizeSelector: paginationPageSizeOptions,\n      defaultColDef,\n      domLayout: 'normal',\n      loadingOverlayComponent: AgLoadingOverlayComponent,\n      noRowsOverlayComponent: AgNoRowsOverlayComponent,\n      noRowsOverlayComponentParams: { message: this.emptyMessage },\n      onGridReady: this.onGridReady,\n      onSortChanged: this.onSortChanged,\n      onFilterChanged: this.onFilterChanged,\n      onPaginationChanged: this.onPaginationChanged,\n      onRowClicked: this.onRowClicked,\n    };\n\n    if (this.gridDiv && (this.gridDiv.offsetHeight > 0 || this.gridDiv.offsetWidth > 0)) {\n      this.gridApi = createGrid(this.gridDiv, gridOptions);\n    } else {\n      console.warn('AG Grid container has zero dimensions. Grid might not render.');\n    }\n  }\n\n  render() {\n    return (\n      <div\n        class={{\n          'ag-grid-wrapper': true,\n          'ag-theme-alpine': true,\n          'ag-grid-no-striped': !this.striped,\n          'ag-grid-no-hover': !this.hoverEffect,\n        }}\n        style={{ height: '100%', width: '100%' }}\n        ref={el => (this.gridDiv = el as HTMLDivElement)}\n      ></div>\n    );\n  }\n}\n"]}