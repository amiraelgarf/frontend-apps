{"version":3,"file":"my-text-field.js","sourceRoot":"","sources":["../../../../../src/components/Html-Tags-Component/my-text-field/my-text-field.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAcnD,MAAM,OAAO,WAAW;IAEZ,iBAAiB,GAAW,sBAAsB,CAAC;IACnD,UAAU,GAAW,YAAY,CAAC;IAClC,YAAY,GAAW,OAAO,CAAC;IAE/B,KAAK,GAAmB,oBAAoB,CAAC;IAE7C,WAAW,GAAiC,QAAQ,CAAC;IAErD,gBAAgB,GAAa,KAAK,CAAC;IAEnC,IAAI,GAAW,EAAE,CAAC;IAElB,OAAO,GAAY,KAAK,CAAC;IAGjC,MAAM;QAEF,MAAM,YAAY,GAAC;YACf,oBAAoB,EAAE,IAAI,CAAC,KAAK,KAAK,oBAAoB;YACzD,eAAe,EAAE,IAAI,CAAC,KAAK,KAAK,eAAe;YAE/C,OAAO,EAAE,IAAI,CAAC,WAAW,KAAK,OAAO;YACrC,QAAQ,EAAE,IAAI,CAAC,WAAW,KAAK,QAAQ;YACvC,OAAO,EAAE,IAAI,CAAC,WAAW,KAAK,OAAO;SACxC,CAAC;QACF,OAAM,CAAC;YACH;gBACI,8DAAO,OAAO,EAAC,WAAW,EAAC,EAAE,EAAC,WAAW,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAG,IAAI,CAAC,UAAU,CAAS;gBACxG,8DAAO,IAAI,EAAC,MAAM,EAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAC,WAAW,EAAC,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,GAAU,CAC3K,CACL,CAAC,CAAA;IACX,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, Prop, h } from '@stencil/core';\r\n\r\n\r\nexport type TextFieldTheme = 'Siemens-LightTheme' | 'VIQ-DarkTheme';\r\n \r\n\r\n@Component({\r\n  tag: 'my-text-field',\r\n  styleUrl: 'my-text-field.css',\r\n  shadow: true,\r\n})\r\n\r\n\r\n//add option for emiting the value from this Component to other Component\r\nexport class MyTextField\r\n{\r\n    @Prop() textInPlaceholder: string = \"Enter your text here\";\r\n    @Prop() lablelText: string = \"Text Field\";\r\n    @Prop() ColorOfLable: string = \"black\";\r\n\r\n    @Prop() Theme: TextFieldTheme = \"Siemens-LightTheme\";\r\n\r\n    @Prop() variantSize: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n    @Prop() IsRequeredToFill : boolean = false;\r\n\r\n    @Prop() size: number = 20;\r\n\r\n    @Prop() disable: boolean = false;\r\n\r\n\r\n    render(){\r\n\r\n        const classesInput={\r\n            'Siemens-LightTheme': this.Theme === 'Siemens-LightTheme',\r\n            'VIQ-DarkTheme': this.Theme === 'VIQ-DarkTheme',\r\n\r\n            'small': this.variantSize === 'small',\r\n            'medium': this.variantSize === 'medium',\r\n            'large': this.variantSize === 'large',\r\n        };\r\n        return(<div>\r\n            <form>\r\n                <label htmlFor=\"TextField\" id=\"labelText\" style={{ color: this.ColorOfLable }}>{this.lablelText}</label>\r\n                <input type=\"text\" placeholder={this.textInPlaceholder} id=\"TextField\" class={classesInput} required={this.IsRequeredToFill} size={this.size} disabled={this.disable}></input>\r\n            </form>\r\n        </div>)\r\n    }\r\n}\r\n"]}